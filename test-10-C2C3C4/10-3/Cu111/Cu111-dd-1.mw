<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2015" minor="1"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false"><Zoom percentage="82"/>
</View-Properties>
<MapleNet-Properties elisiondigitsbefore="100" labelling="true" indentamount="4" elisiontermsthreshold="infinity" ansi="false" errorbreak="1" useclientjvm="true" echo="1" imaginaryunit="I" labelwidth="20" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" contextmenusize="automatic" plotdriver="opengl" elisiondigitsafter="100" plotoutput="terminal" helpbrowser="standard" rtablesize="10" elisiontermsbefore="100" elisiondigitsthreshold="infinity" typesetting="standard" plotdevice="inline" verboseproc="1" showassumed="1" quiet="false" errorcursor="false" longdelim="true" plotoptions="" elisiontermsafter="100" screenwidth="79" preplot="" prettyprint="3" displayprecision="10" screenpixelheight="1135" warnlevel="3" screenheight="25" latexwidth="8.0" postplot="" prompt="&gt; " ShowLabels="true"/>
<Styles>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/>
<Group labelreference="L70" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Heading </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">T:= 600  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg0021:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg0201:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg0211:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg1011:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg1021:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg1211:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg1221:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg1401:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg1411:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2202:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2211:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2214:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2221:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2224:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2225:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2402:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2411:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2414:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2423:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2425:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2601:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2611:= 0  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Pg2621:= 1  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Kinetic constants</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads001d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.537590)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*2.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads001i:=evalf(20836612225.1252*T*exp(-max(0.0,0.537590,0.537590)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads002d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-0.755054)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*32.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads002i:=evalf(20836612225.1252*T*exp(-max(0.0,0.755054,0.755054)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads003d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.272990)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*18.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads003i:=evalf(20836612225.1252*T*exp(-max(0.0,0.272990,0.272990)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads004d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.091775)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*16.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads004i:=evalf(20836612225.1252*T*exp(-max(0.0,0.091775,0.091775)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads005d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.371860)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*32.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads005i:=evalf(20836612225.1252*T*exp(-max(0.0,0.371860,0.371860)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads006d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.171820)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*30.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads006i:=evalf(20836612225.1252*T*exp(-max(0.0,0.171820,0.171820)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads007d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.436132)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*46.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads007i:=evalf(20836612225.1252*T*exp(-max(0.0,0.436132,0.436132)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads008d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-0.573056)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*62.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads008i:=evalf(20836612225.1252*T*exp(-max(0.0,0.573056,0.573056)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads009d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-1.009484)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*28.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads009i:=evalf(20836612225.1252*T*exp(-max(0.0,1.009484,1.009484)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads010d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-0.074450)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*44.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads010i:=evalf(20836612225.1252*T*exp(-max(0.0,0.074450,0.074450)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads011d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.337166)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*30.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads011i:=evalf(20836612225.1252*T*exp(-max(0.0,0.337166,0.337166)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads012d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-0.155258)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*46.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads012i:=evalf(20836612225.1252*T*exp(-max(0.0,0.155258,0.155258)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads013d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-0.483301)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*28.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads013i:=evalf(20836612225.1252*T*exp(-max(0.0,0.483301,0.483301)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads014d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-1.573354)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*26.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads014i:=evalf(20836612225.1252*T*exp(-max(0.0,1.573354,1.573354)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads015d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.209857)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*44.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads015i:=evalf(20836612225.1252*T*exp(-max(0.0,0.209857,0.209857)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads016d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.503025)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*44.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads016i:=evalf(20836612225.1252*T*exp(-max(0.0,0.503025,0.503025)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads017d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.410433)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*42.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads017i:=evalf(20836612225.1252*T*exp(-max(0.0,0.410433,0.410433)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads018d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-1.990115)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*42.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads018i:=evalf(20836612225.1252*T*exp(-max(0.0,1.990115,1.990115)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads019d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,-0.000000,-0.566792)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*60.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads019i:=evalf(20836612225.1252*T*exp(-max(0.0,0.566792,0.566792)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads020d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-0.608489)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*60.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads020i:=evalf(20836612225.1252*T*exp(-max(0.0,0.608489,0.608489)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads021d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-1.505992)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*58.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads021i:=evalf(20836612225.1252*T*exp(-max(0.0,1.505992,1.505992)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads022d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-1.233882)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*58.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads022i:=evalf(20836612225.1252*T*exp(-max(0.0,1.233882,1.233882)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads023d:=evalf((101325*6.601250*1E-20*exp(-max(0.0,0.000000,-2.522182)/(8.617333262145E-5*T)))/sqrt(2*Pi*1.6605390400E-27*58.000000*1.3806485200E-23*T )) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">kads023i:=evalf(20836612225.1252*T*exp(-max(0.0,2.522182,2.522182)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn101d:=evalf(20836612225.1252*T*exp(-max(0.0,0.000000,0.000000)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn101i:=evalf(20836612225.1252*T*exp(-max(0.0,0.000000,-0.000000)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn102d:=evalf(20836612225.1252*T*exp(-max(0.0,-0.101699,-2.794923)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn102i:=evalf(20836612225.1252*T*exp(-max(0.0,2.693223,2.794923)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn103d:=evalf(20836612225.1252*T*exp(-max(0.0,1.057118,-0.231691)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn103i:=evalf(20836612225.1252*T*exp(-max(0.0,1.288808,0.231691)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn104d:=evalf(20836612225.1252*T*exp(-max(0.0,0.076721,-0.698481)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn104i:=evalf(20836612225.1252*T*exp(-max(0.0,0.775202,0.698481)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn105d:=evalf(20836612225.1252*T*exp(-max(0.0,1.441885,0.466790)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn105i:=evalf(20836612225.1252*T*exp(-max(0.0,0.975094,-0.466790)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn106d:=evalf(20836612225.1252*T*exp(-max(0.0,1.377539,0.462932)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn106i:=evalf(20836612225.1252*T*exp(-max(0.0,0.914606,-0.462932)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn107d:=evalf(20836612225.1252*T*exp(-max(0.0,1.207651,0.599450)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn107i:=evalf(20836612225.1252*T*exp(-max(0.0,0.608201,-0.599450)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn108d:=evalf(20836612225.1252*T*exp(-max(0.0,0.873777,0.337566)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn108i:=evalf(20836612225.1252*T*exp(-max(0.0,0.536211,-0.337566)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn109d:=evalf(20836612225.1252*T*exp(-max(0.0,1.715613,0.956468)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn109i:=evalf(20836612225.1252*T*exp(-max(0.0,0.759145,-0.956468)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn110d:=evalf(20836612225.1252*T*exp(-max(0.0,0.985293,-0.275721)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn110i:=evalf(20836612225.1252*T*exp(-max(0.0,1.261014,0.275721)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn111d:=evalf(20836612225.1252*T*exp(-max(0.0,0.713302,-0.186722)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn111i:=evalf(20836612225.1252*T*exp(-max(0.0,0.900024,0.186722)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn112d:=evalf(20836612225.1252*T*exp(-max(0.0,0.545357,-0.420234)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn112i:=evalf(20836612225.1252*T*exp(-max(0.0,0.965591,0.420234)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn113d:=evalf(20836612225.1252*T*exp(-max(0.0,1.154491,-1.275215)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn113i:=evalf(20836612225.1252*T*exp(-max(0.0,2.429705,1.275215)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn114d:=evalf(20836612225.1252*T*exp(-max(0.0,1.156770,0.636995)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn114i:=evalf(20836612225.1252*T*exp(-max(0.0,0.519775,-0.636995)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn115d:=evalf(20836612225.1252*T*exp(-max(0.0,1.090364,0.725994)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn115i:=evalf(20836612225.1252*T*exp(-max(0.0,0.364370,-0.725994)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn116d:=evalf(20836612225.1252*T*exp(-max(0.0,1.020427,0.261349)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn116i:=evalf(20836612225.1252*T*exp(-max(0.0,0.759078,-0.261349)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn117d:=evalf(20836612225.1252*T*exp(-max(0.0,0.582219,0.027837)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn117i:=evalf(20836612225.1252*T*exp(-max(0.0,0.554382,-0.027837)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn118d:=evalf(20836612225.1252*T*exp(-max(0.0,0.619595,-0.084946)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn118i:=evalf(20836612225.1252*T*exp(-max(0.0,0.704540,0.084946)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn119d:=evalf(20836612225.1252*T*exp(-max(0.0,0.256748,-0.939926)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn119i:=evalf(20836612225.1252*T*exp(-max(0.0,1.196674,0.939926)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn120d:=evalf(20836612225.1252*T*exp(-max(0.0,1.752776,-0.357133)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn120i:=evalf(20836612225.1252*T*exp(-max(0.0,2.109909,0.357133)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn121d:=evalf(20836612225.1252*T*exp(-max(0.0,1.740048,0.385378)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn121i:=evalf(20836612225.1252*T*exp(-max(0.0,1.354670,-0.385378)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn122d:=evalf(20836612225.1252*T*exp(-max(0.0,0.942744,-0.394678)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn122i:=evalf(20836612225.1252*T*exp(-max(0.0,1.337423,0.394678)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn123d:=evalf(20836612225.1252*T*exp(-max(0.0,1.302849,0.258834)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn123i:=evalf(20836612225.1252*T*exp(-max(0.0,1.044015,-0.258834)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn124d:=evalf(20836612225.1252*T*exp(-max(0.0,0.357070,-0.318461)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn124i:=evalf(20836612225.1252*T*exp(-max(0.0,0.675531,0.318461)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn125d:=evalf(20836612225.1252*T*exp(-max(0.0,1.549059,0.568563)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn125i:=evalf(20836612225.1252*T*exp(-max(0.0,0.980496,-0.568563)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn126d:=evalf(20836612225.1252*T*exp(-max(0.0,2.123828,0.722953)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn126i:=evalf(20836612225.1252*T*exp(-max(0.0,1.400876,-0.722953)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn127d:=evalf(20836612225.1252*T*exp(-max(0.0,3.653618,2.464958)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn127i:=evalf(20836612225.1252*T*exp(-max(0.0,1.188660,-2.464958)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn128d:=evalf(20836612225.1252*T*exp(-max(0.0,1.417985,0.418545)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn128i:=evalf(20836612225.1252*T*exp(-max(0.0,0.999440,-0.418545)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn129d:=evalf(20836612225.1252*T*exp(-max(0.0,0.501446,-0.500852)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn129i:=evalf(20836612225.1252*T*exp(-max(0.0,1.002298,0.500852)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn130d:=evalf(20836612225.1252*T*exp(-max(0.0,0.800000,0.292114)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn130i:=evalf(20836612225.1252*T*exp(-max(0.0,0.507886,-0.292114)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn131d:=evalf(20836612225.1252*T*exp(-max(0.0,0.300300,-0.174676)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn131i:=evalf(20836612225.1252*T*exp(-max(0.0,0.474976,0.174676)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn132d:=evalf(20836612225.1252*T*exp(-max(0.0,1.035885,0.523805)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn132i:=evalf(20836612225.1252*T*exp(-max(0.0,0.512081,-0.523805)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn133d:=evalf(20836612225.1252*T*exp(-max(0.0,0.800000,-0.893884)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn133i:=evalf(20836612225.1252*T*exp(-max(0.0,1.693884,0.893884)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn134d:=evalf(20836612225.1252*T*exp(-max(0.0,1.123413,-0.452607)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn134i:=evalf(20836612225.1252*T*exp(-max(0.0,1.576020,0.452607)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn135d:=evalf(20836612225.1252*T*exp(-max(0.0,-0.097143,-0.919397)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn135i:=evalf(20836612225.1252*T*exp(-max(0.0,0.822254,0.919397)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn136d:=evalf(20836612225.1252*T*exp(-max(0.0,0.052600,-0.220916)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn136i:=evalf(20836612225.1252*T*exp(-max(0.0,0.273516,0.220916)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn137d:=evalf(20836612225.1252*T*exp(-max(0.0,0.800000,-0.149163)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn137i:=evalf(20836612225.1252*T*exp(-max(0.0,0.949163,0.149163)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn138d:=evalf(20836612225.1252*T*exp(-max(0.0,0.800000,1.650585)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn138i:=evalf(20836612225.1252*T*exp(-max(0.0,-0.850585,-1.650585)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn139d:=evalf(20836612225.1252*T*exp(-max(0.0,0.800000,1.241153)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn139i:=evalf(20836612225.1252*T*exp(-max(0.0,-0.441153,-1.241153)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn140d:=evalf(20836612225.1252*T*exp(-max(0.0,0.800000,0.289911)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn140i:=evalf(20836612225.1252*T*exp(-max(0.0,0.510089,-0.289911)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn141d:=evalf(20836612225.1252*T*exp(-max(0.0,0.800000,1.176935)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn141i:=evalf(20836612225.1252*T*exp(-max(0.0,-0.376935,-1.176935)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn201d:=evalf(20836612225.1252*T*exp(-max(0.0,1.201449,0.638991)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn201i:=evalf(20836612225.1252*T*exp(-max(0.0,0.562458,-0.638991)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn202d:=evalf(20836612225.1252*T*exp(-max(0.0,1.061293,0.483893)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn202i:=evalf(20836612225.1252*T*exp(-max(0.0,0.577400,-0.483893)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn203d:=evalf(20836612225.1252*T*exp(-max(0.0,0.563162,-0.040093)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn203i:=evalf(20836612225.1252*T*exp(-max(0.0,0.603255,0.040093)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn204d:=evalf(20836612225.1252*T*exp(-max(0.0,0.820479,0.057547)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn204i:=evalf(20836612225.1252*T*exp(-max(0.0,0.762932,-0.057547)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn205d:=evalf(20836612225.1252*T*exp(-max(0.0,0.661959,-0.100330)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn205i:=evalf(20836612225.1252*T*exp(-max(0.0,0.762289,0.100330)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn206d:=evalf(20836612225.1252*T*exp(-max(0.0,1.298532,0.423655)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn206i:=evalf(20836612225.1252*T*exp(-max(0.0,0.874876,-0.423655)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn207d:=evalf(20836612225.1252*T*exp(-max(0.0,0.966582,0.066562)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn207i:=evalf(20836612225.1252*T*exp(-max(0.0,0.900020,-0.066562)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn208d:=evalf(20836612225.1252*T*exp(-max(0.0,0.944472,0.224439)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn208i:=evalf(20836612225.1252*T*exp(-max(0.0,0.720032,-0.224439)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn209d:=evalf(20836612225.1252*T*exp(-max(0.0,0.844672,-0.135262)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn209i:=evalf(20836612225.1252*T*exp(-max(0.0,0.979933,0.135262)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn210d:=evalf(20836612225.1252*T*exp(-max(0.0,1.020254,0.090936)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn210i:=evalf(20836612225.1252*T*exp(-max(0.0,0.929318,-0.090936)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn211d:=evalf(20836612225.1252*T*exp(-max(0.0,1.581428,0.450636)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn211i:=evalf(20836612225.1252*T*exp(-max(0.0,1.130792,-0.450636)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn212d:=evalf(20836612225.1252*T*exp(-max(0.0,1.459099,0.492436)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn212i:=evalf(20836612225.1252*T*exp(-max(0.0,0.966663,-0.492436)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn213d:=evalf(20836612225.1252*T*exp(-max(0.0,0.915535,-0.307671)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn213i:=evalf(20836612225.1252*T*exp(-max(0.0,1.223206,0.307671)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn214d:=evalf(20836612225.1252*T*exp(-max(0.0,1.243103,0.621357)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn214i:=evalf(20836612225.1252*T*exp(-max(0.0,0.621746,-0.621357)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn215d:=evalf(20836612225.1252*T*exp(-max(0.0,1.356419,0.527302)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn215i:=evalf(20836612225.1252*T*exp(-max(0.0,0.829118,-0.527302)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn216d:=evalf(20836612225.1252*T*exp(-max(0.0,0.996591,0.662736)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn216i:=evalf(20836612225.1252*T*exp(-max(0.0,0.333855,-0.662736)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn217d:=evalf(20836612225.1252*T*exp(-max(0.0,1.504478,0.964912)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn217i:=evalf(20836612225.1252*T*exp(-max(0.0,0.539566,-0.964912)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn218d:=evalf(20836612225.1252*T*exp(-max(0.0,0.614963,-0.266292)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn218i:=evalf(20836612225.1252*T*exp(-max(0.0,0.881255,0.266292)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn219d:=evalf(20836612225.1252*T*exp(-max(0.0,0.943964,0.248982)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn219i:=evalf(20836612225.1252*T*exp(-max(0.0,0.694981,-0.248982)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn220d:=evalf(20836612225.1252*T*exp(-max(0.0,0.676647,-0.145286)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn220i:=evalf(20836612225.1252*T*exp(-max(0.0,0.821933,0.145286)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn221d:=evalf(20836612225.1252*T*exp(-max(0.0,1.053495,0.129939)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn221i:=evalf(20836612225.1252*T*exp(-max(0.0,0.923555,-0.129939)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn222d:=evalf(20836612225.1252*T*exp(-max(0.0,0.760460,-0.051231)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn222i:=evalf(20836612225.1252*T*exp(-max(0.0,0.811691,0.051231)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn223d:=evalf(20836612225.1252*T*exp(-max(0.0,1.136713,0.512263)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn223i:=evalf(20836612225.1252*T*exp(-max(0.0,0.624450,-0.512263)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn224d:=evalf(20836612225.1252*T*exp(-max(0.0,0.446713,-0.077306)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn224i:=evalf(20836612225.1252*T*exp(-max(0.0,0.524020,0.077306)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn225d:=evalf(20836612225.1252*T*exp(-max(0.0,0.562156,-0.238737)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn225i:=evalf(20836612225.1252*T*exp(-max(0.0,0.800894,0.238737)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn226d:=evalf(20836612225.1252*T*exp(-max(0.0,0.454946,-0.540913)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn226i:=evalf(20836612225.1252*T*exp(-max(0.0,0.995859,0.540913)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn227d:=evalf(20836612225.1252*T*exp(-max(0.0,1.085642,0.581502)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn227i:=evalf(20836612225.1252*T*exp(-max(0.0,0.504140,-0.581502)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn228d:=evalf(20836612225.1252*T*exp(-max(0.0,0.240391,-0.592580)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn228i:=evalf(20836612225.1252*T*exp(-max(0.0,0.832971,0.592580)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn229d:=evalf(20836612225.1252*T*exp(-max(0.0,0.750449,-0.073632)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn229i:=evalf(20836612225.1252*T*exp(-max(0.0,0.824081,0.073632)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn230d:=evalf(20836612225.1252*T*exp(-max(0.0,0.672247,-0.359743)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn230i:=evalf(20836612225.1252*T*exp(-max(0.0,1.031991,0.359743)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn231d:=evalf(20836612225.1252*T*exp(-max(0.0,1.108898,0.320636)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn231i:=evalf(20836612225.1252*T*exp(-max(0.0,0.788262,-0.320636)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn232d:=evalf(20836612225.1252*T*exp(-max(0.0,1.206799,0.164906)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn232i:=evalf(20836612225.1252*T*exp(-max(0.0,1.041893,-0.164906)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn233d:=evalf(20836612225.1252*T*exp(-max(0.0,0.965442,0.199179)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn233i:=evalf(20836612225.1252*T*exp(-max(0.0,0.766263,-0.199179)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn234d:=evalf(20836612225.1252*T*exp(-max(0.0,0.666157,-0.398588)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn234i:=evalf(20836612225.1252*T*exp(-max(0.0,1.064745,0.398588)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn235d:=evalf(20836612225.1252*T*exp(-max(0.0,0.966722,0.315638)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn235i:=evalf(20836612225.1252*T*exp(-max(0.0,0.651084,-0.315638)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn236d:=evalf(20836612225.1252*T*exp(-max(0.0,1.131649,0.418308)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn236i:=evalf(20836612225.1252*T*exp(-max(0.0,0.713341,-0.418308)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn237d:=evalf(20836612225.1252*T*exp(-max(0.0,1.047838,0.579739)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn237i:=evalf(20836612225.1252*T*exp(-max(0.0,0.468098,-0.579739)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn238d:=evalf(20836612225.1252*T*exp(-max(0.0,1.145390,0.298409)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn238i:=evalf(20836612225.1252*T*exp(-max(0.0,0.846982,-0.298409)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn239d:=evalf(20836612225.1252*T*exp(-max(0.0,0.588514,-0.824007)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn239i:=evalf(20836612225.1252*T*exp(-max(0.0,1.412521,0.824007)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn240d:=evalf(20836612225.1252*T*exp(-max(0.0,1.524306,0.773224)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn240i:=evalf(20836612225.1252*T*exp(-max(0.0,0.751082,-0.773224)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn241d:=evalf(20836612225.1252*T*exp(-max(0.0,0.816012,-0.100640)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn241i:=evalf(20836612225.1252*T*exp(-max(0.0,0.916652,0.100640)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn242d:=evalf(20836612225.1252*T*exp(-max(0.0,0.943003,-0.066508)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn242i:=evalf(20836612225.1252*T*exp(-max(0.0,1.009511,0.066508)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn243d:=evalf(20836612225.1252*T*exp(-max(0.0,0.632462,-0.226240)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn243i:=evalf(20836612225.1252*T*exp(-max(0.0,0.858702,0.226240)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn244d:=evalf(20836612225.1252*T*exp(-max(0.0,1.175299,0.089222)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn244i:=evalf(20836612225.1252*T*exp(-max(0.0,1.086077,-0.089222)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn245d:=evalf(20836612225.1252*T*exp(-max(0.0,0.969785,0.197797)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn245i:=evalf(20836612225.1252*T*exp(-max(0.0,0.771988,-0.197797)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn246d:=evalf(20836612225.1252*T*exp(-max(0.0,1.394775,0.656765)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn246i:=evalf(20836612225.1252*T*exp(-max(0.0,0.738010,-0.656765)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn247d:=evalf(20836612225.1252*T*exp(-max(0.0,0.607577,-0.516429)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn247i:=evalf(20836612225.1252*T*exp(-max(0.0,1.124005,0.516429)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn248d:=evalf(20836612225.1252*T*exp(-max(0.0,0.858632,-0.305896)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn248i:=evalf(20836612225.1252*T*exp(-max(0.0,1.164529,0.305896)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn249d:=evalf(20836612225.1252*T*exp(-max(0.0,0.809114,-0.024566)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn249i:=evalf(20836612225.1252*T*exp(-max(0.0,0.833680,0.024566)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn250d:=evalf(20836612225.1252*T*exp(-max(0.0,1.561533,0.764312)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn250i:=evalf(20836612225.1252*T*exp(-max(0.0,0.797221,-0.764312)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn251d:=evalf(20836612225.1252*T*exp(-max(0.0,0.335501,-0.832919)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn251i:=evalf(20836612225.1252*T*exp(-max(0.0,1.168420,0.832919)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn252d:=evalf(20836612225.1252*T*exp(-max(0.0,1.135728,-0.340028)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn252i:=evalf(20836612225.1252*T*exp(-max(0.0,1.475756,0.340028)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn253d:=evalf(20836612225.1252*T*exp(-max(0.0,1.732258,0.662550)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn253i:=evalf(20836612225.1252*T*exp(-max(0.0,1.069708,-0.662550)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn254d:=evalf(20836612225.1252*T*exp(-max(0.0,0.925424,0.340275)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn254i:=evalf(20836612225.1252*T*exp(-max(0.0,0.585149,-0.340275)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn255d:=evalf(20836612225.1252*T*exp(-max(0.0,1.495730,0.553975)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn255i:=evalf(20836612225.1252*T*exp(-max(0.0,0.941754,-0.553975)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn256d:=evalf(20836612225.1252*T*exp(-max(0.0,0.788596,-0.111611)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn256i:=evalf(20836612225.1252*T*exp(-max(0.0,0.900207,0.111611)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn257d:=evalf(20836612225.1252*T*exp(-max(0.0,0.649331,-0.900489)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn257i:=evalf(20836612225.1252*T*exp(-max(0.0,1.549820,0.900489)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn258d:=evalf(20836612225.1252*T*exp(-max(0.0,0.518842,-1.114190)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn258i:=evalf(20836612225.1252*T*exp(-max(0.0,1.633032,1.114190)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn259d:=evalf(20836612225.1252*T*exp(-max(0.0,0.963386,-0.272972)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn259i:=evalf(20836612225.1252*T*exp(-max(0.0,1.236357,0.272972)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn260d:=evalf(20836612225.1252*T*exp(-max(0.0,1.299579,0.498308)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn260i:=evalf(20836612225.1252*T*exp(-max(0.0,0.801271,-0.498308)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn261d:=evalf(20836612225.1252*T*exp(-max(0.0,0.964268,0.113251)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn261i:=evalf(20836612225.1252*T*exp(-max(0.0,0.851017,-0.113251)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn262d:=evalf(20836612225.1252*T*exp(-max(0.0,1.128368,0.845111)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn262i:=evalf(20836612225.1252*T*exp(-max(0.0,0.283257,-0.845111)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn263d:=evalf(20836612225.1252*T*exp(-max(0.0,1.140301,0.590479)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn263i:=evalf(20836612225.1252*T*exp(-max(0.0,0.549822,-0.590479)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn264d:=evalf(20836612225.1252*T*exp(-max(0.0,1.134862,0.073831)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn264i:=evalf(20836612225.1252*T*exp(-max(0.0,1.061030,-0.073831)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn265d:=evalf(20836612225.1252*T*exp(-max(0.0,0.844837,-0.180800)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn265i:=evalf(20836612225.1252*T*exp(-max(0.0,1.025637,0.180800)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn266d:=evalf(20836612225.1252*T*exp(-max(0.0,0.857323,0.327190)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn266i:=evalf(20836612225.1252*T*exp(-max(0.0,0.530133,-0.327190)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn267d:=evalf(20836612225.1252*T*exp(-max(0.0,0.843613,-0.118276)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn267i:=evalf(20836612225.1252*T*exp(-max(0.0,0.961889,0.118276)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn268d:=evalf(20836612225.1252*T*exp(-max(0.0,0.814055,0.131904)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn268i:=evalf(20836612225.1252*T*exp(-max(0.0,0.682151,-0.131904)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn269d:=evalf(20836612225.1252*T*exp(-max(0.0,0.750031,-0.599956)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn269i:=evalf(20836612225.1252*T*exp(-max(0.0,1.349987,0.599956)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn270d:=evalf(20836612225.1252*T*exp(-max(0.0,0.819004,0.135710)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn270i:=evalf(20836612225.1252*T*exp(-max(0.0,0.683294,-0.135710)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn271d:=evalf(20836612225.1252*T*exp(-max(0.0,0.821406,-0.497825)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn271i:=evalf(20836612225.1252*T*exp(-max(0.0,1.319231,0.497825)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn272d:=evalf(20836612225.1252*T*exp(-max(0.0,1.001488,-0.345325)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn272i:=evalf(20836612225.1252*T*exp(-max(0.0,1.346812,0.345325)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn273d:=evalf(20836612225.1252*T*exp(-max(0.0,0.571965,-0.243193)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn273i:=evalf(20836612225.1252*T*exp(-max(0.0,0.815159,0.243193)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn274d:=evalf(20836612225.1252*T*exp(-max(0.0,0.767842,-0.060642)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn274i:=evalf(20836612225.1252*T*exp(-max(0.0,0.828484,0.060642)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn275d:=evalf(20836612225.1252*T*exp(-max(0.0,0.807203,-0.117649)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn275i:=evalf(20836612225.1252*T*exp(-max(0.0,0.924852,0.117649)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn276d:=evalf(20836612225.1252*T*exp(-max(0.0,0.371767,-0.568632)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn276i:=evalf(20836612225.1252*T*exp(-max(0.0,0.940399,0.568632)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn277d:=evalf(20836612225.1252*T*exp(-max(0.0,0.847155,-0.162017)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn277i:=evalf(20836612225.1252*T*exp(-max(0.0,1.009171,0.162017)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn278d:=evalf(20836612225.1252*T*exp(-max(0.0,0.486685,-0.305717)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn278i:=evalf(20836612225.1252*T*exp(-max(0.0,0.792403,0.305717)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn279d:=evalf(20836612225.1252*T*exp(-max(0.0,0.981816,0.283449)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn279i:=evalf(20836612225.1252*T*exp(-max(0.0,0.698367,-0.283449)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn280d:=evalf(20836612225.1252*T*exp(-max(0.0,0.770786,-0.026684)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn280i:=evalf(20836612225.1252*T*exp(-max(0.0,0.797470,0.026684)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn281d:=evalf(20836612225.1252*T*exp(-max(0.0,0.754754,0.265188)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn281i:=evalf(20836612225.1252*T*exp(-max(0.0,0.489566,-0.265188)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn282d:=evalf(20836612225.1252*T*exp(-max(0.0,0.572288,-0.470477)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn282i:=evalf(20836612225.1252*T*exp(-max(0.0,1.042766,0.470477)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn283d:=evalf(20836612225.1252*T*exp(-max(0.0,0.693233,-0.184547)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn283i:=evalf(20836612225.1252*T*exp(-max(0.0,0.877780,0.184547)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn284d:=evalf(20836612225.1252*T*exp(-max(0.0,0.751977,-0.128816)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn284i:=evalf(20836612225.1252*T*exp(-max(0.0,0.880793,0.128816)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn285d:=evalf(20836612225.1252*T*exp(-max(0.0,1.302285,0.448988)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn285i:=evalf(20836612225.1252*T*exp(-max(0.0,0.853297,-0.448988)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn286d:=evalf(20836612225.1252*T*exp(-max(0.0,1.295687,0.438116)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn286i:=evalf(20836612225.1252*T*exp(-max(0.0,0.857571,-0.438116)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn287d:=evalf(20836612225.1252*T*exp(-max(0.0,0.908138,-0.019494)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn287i:=evalf(20836612225.1252*T*exp(-max(0.0,0.927632,0.019494)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn288d:=evalf(20836612225.1252*T*exp(-max(0.0,1.094034,0.255565)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn288i:=evalf(20836612225.1252*T*exp(-max(0.0,0.838470,-0.255565)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn289d:=evalf(20836612225.1252*T*exp(-max(0.0,1.069673,-0.140179)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn289i:=evalf(20836612225.1252*T*exp(-max(0.0,1.209852,0.140179)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn290d:=evalf(20836612225.1252*T*exp(-max(0.0,1.024138,-0.151051)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn290i:=evalf(20836612225.1252*T*exp(-max(0.0,1.175189,0.151051)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn291d:=evalf(20836612225.1252*T*exp(-max(0.0,1.058601,-0.065427)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn291i:=evalf(20836612225.1252*T*exp(-max(0.0,1.124028,0.065427)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn292d:=evalf(20836612225.1252*T*exp(-max(0.0,1.451041,0.500616)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn292i:=evalf(20836612225.1252*T*exp(-max(0.0,0.950425,-0.500616)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn293d:=evalf(20836612225.1252*T*exp(-max(0.0,0.893708,0.208743)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn293i:=evalf(20836612225.1252*T*exp(-max(0.0,0.684966,-0.208743)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn294d:=evalf(20836612225.1252*T*exp(-max(0.0,0.902695,-0.077188)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn294i:=evalf(20836612225.1252*T*exp(-max(0.0,0.979883,0.077188)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn295d:=evalf(20836612225.1252*T*exp(-max(0.0,0.957861,0.234604)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn295i:=evalf(20836612225.1252*T*exp(-max(0.0,0.723257,-0.234604)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn296d:=evalf(20836612225.1252*T*exp(-max(0.0,1.327155,-0.066316)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn296i:=evalf(20836612225.1252*T*exp(-max(0.0,1.393471,0.066316)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn297d:=evalf(20836612225.1252*T*exp(-max(0.0,1.137799,0.245476)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn297i:=evalf(20836612225.1252*T*exp(-max(0.0,0.892323,-0.245476)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn298d:=evalf(20836612225.1252*T*exp(-max(0.0,1.308440,0.159852)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn298i:=evalf(20836612225.1252*T*exp(-max(0.0,1.148588,-0.159852)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn299d:=evalf(20836612225.1252*T*exp(-max(0.0,0.971481,0.491487)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn299i:=evalf(20836612225.1252*T*exp(-max(0.0,0.479994,-0.491487)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn300d:=evalf(20836612225.1252*T*exp(-max(0.0,1.059402,0.179695)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn300i:=evalf(20836612225.1252*T*exp(-max(0.0,0.879707,-0.179695)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn301d:=evalf(20836612225.1252*T*exp(-max(0.0,2.621219,0.803711)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn301i:=evalf(20836612225.1252*T*exp(-max(0.0,1.817509,-0.803711)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn302d:=evalf(20836612225.1252*T*exp(-max(0.0,1.461880,0.764169)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn302i:=evalf(20836612225.1252*T*exp(-max(0.0,0.697711,-0.764169)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn303d:=evalf(20836612225.1252*T*exp(-max(0.0,1.293983,0.617842)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn303i:=evalf(20836612225.1252*T*exp(-max(0.0,0.676141,-0.617842)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn304d:=evalf(20836612225.1252*T*exp(-max(0.0,1.800861,1.403712)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn304i:=evalf(20836612225.1252*T*exp(-max(0.0,0.397149,-1.403712)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn305d:=evalf(20836612225.1252*T*exp(-max(0.0,2.261322,1.516764)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn305i:=evalf(20836612225.1252*T*exp(-max(0.0,0.744558,-1.516764)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn306d:=evalf(20836612225.1252*T*exp(-max(0.0,1.778115,1.317622)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn306i:=evalf(20836612225.1252*T*exp(-max(0.0,0.460493,-1.317622)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn307d:=evalf(20836612225.1252*T*exp(-max(0.0,2.673029,2.049652)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn307i:=evalf(20836612225.1252*T*exp(-max(0.0,0.623377,-2.049652)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn308d:=evalf(20836612225.1252*T*exp(-max(0.0,2.289991,1.790450)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn308i:=evalf(20836612225.1252*T*exp(-max(0.0,0.499541,-1.790450)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn309d:=evalf(20836612225.1252*T*exp(-max(0.0,3.083034,2.296282)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn309i:=evalf(20836612225.1252*T*exp(-max(0.0,0.786752,-2.296282)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn310d:=evalf(20836612225.1252*T*exp(-max(0.0,3.793076,2.760314)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn310i:=evalf(20836612225.1252*T*exp(-max(0.0,1.032762,-2.760314)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn311d:=evalf(20836612225.1252*T*exp(-max(0.0,2.470715,1.208783)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn311i:=evalf(20836612225.1252*T*exp(-max(0.0,1.261933,-1.208783)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn312d:=evalf(20836612225.1252*T*exp(-max(0.0,2.415292,1.329732)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn312i:=evalf(20836612225.1252*T*exp(-max(0.0,1.085561,-1.329732)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn313d:=evalf(20836612225.1252*T*exp(-max(0.0,1.425888,0.848775)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn313i:=evalf(20836612225.1252*T*exp(-max(0.0,0.577113,-0.848775)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn314d:=evalf(20836612225.1252*T*exp(-max(0.0,1.907842,1.280931)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn314i:=evalf(20836612225.1252*T*exp(-max(0.0,0.626910,-1.280931)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn315d:=evalf(20836612225.1252*T*exp(-max(0.0,1.402751,0.694833)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn315i:=evalf(20836612225.1252*T*exp(-max(0.0,0.707918,-0.694833)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn316d:=evalf(20836612225.1252*T*exp(-max(0.0,1.309817,0.964270)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn316i:=evalf(20836612225.1252*T*exp(-max(0.0,0.345547,-0.964270)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn317d:=evalf(20836612225.1252*T*exp(-max(0.0,1.695639,0.514847)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn317i:=evalf(20836612225.1252*T*exp(-max(0.0,1.180791,-0.514847)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn318d:=evalf(20836612225.1252*T*exp(-max(0.0,1.878478,1.593511)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn318i:=evalf(20836612225.1252*T*exp(-max(0.0,0.284967,-1.593511)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn319d:=evalf(20836612225.1252*T*exp(-max(0.0,1.637230,1.106234)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn319i:=evalf(20836612225.1252*T*exp(-max(0.0,0.530995,-1.106234)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn320d:=evalf(20836612225.1252*T*exp(-max(0.0,1.062625,-0.167787)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn320i:=evalf(20836612225.1252*T*exp(-max(0.0,1.230412,0.167787)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn321d:=evalf(20836612225.1252*T*exp(-max(0.0,1.974607,1.533020)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn321i:=evalf(20836612225.1252*T*exp(-max(0.0,0.441587,-1.533020)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn322d:=evalf(20836612225.1252*T*exp(-max(0.0,1.055058,0.720333)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn322i:=evalf(20836612225.1252*T*exp(-max(0.0,0.334724,-0.720333)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn323d:=evalf(20836612225.1252*T*exp(-max(0.0,1.841137,1.187929)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn323i:=evalf(20836612225.1252*T*exp(-max(0.0,0.653208,-1.187929)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn324d:=evalf(20836612225.1252*T*exp(-max(0.0,2.085336,1.766171)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn324i:=evalf(20836612225.1252*T*exp(-max(0.0,0.319165,-1.766171)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn325d:=evalf(20836612225.1252*T*exp(-max(0.0,2.341545,1.747065)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn325i:=evalf(20836612225.1252*T*exp(-max(0.0,0.594480,-1.747065)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn326d:=evalf(20836612225.1252*T*exp(-max(0.0,0.876848,0.013355)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn326i:=evalf(20836612225.1252*T*exp(-max(0.0,0.863493,-0.013355)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn327d:=evalf(20836612225.1252*T*exp(-max(0.0,1.925691,1.572177)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn327i:=evalf(20836612225.1252*T*exp(-max(0.0,0.353514,-1.572177)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn328d:=evalf(20836612225.1252*T*exp(-max(0.0,1.630663,0.903578)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn328i:=evalf(20836612225.1252*T*exp(-max(0.0,0.727084,-0.903578)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn329d:=evalf(20836612225.1252*T*exp(-max(0.0,2.048584,1.592003)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn329i:=evalf(20836612225.1252*T*exp(-max(0.0,0.456580,-1.592003)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn330d:=evalf(20836612225.1252*T*exp(-max(0.0,2.977324,2.524842)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn330i:=evalf(20836612225.1252*T*exp(-max(0.0,0.452481,-2.524842)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn331d:=evalf(20836612225.1252*T*exp(-max(0.0,1.481449,0.656817)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn331i:=evalf(20836612225.1252*T*exp(-max(0.0,0.824632,-0.656817)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn332d:=evalf(20836612225.1252*T*exp(-max(0.0,2.425230,1.764333)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn332i:=evalf(20836612225.1252*T*exp(-max(0.0,0.660897,-1.764333)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn333d:=evalf(20836612225.1252*T*exp(-max(0.0,2.591826,1.885921)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn333i:=evalf(20836612225.1252*T*exp(-max(0.0,0.705905,-1.885921)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn334d:=evalf(20836612225.1252*T*exp(-max(0.0,2.553721,1.724896)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn334i:=evalf(20836612225.1252*T*exp(-max(0.0,0.828825,-1.724896)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn335d:=evalf(20836612225.1252*T*exp(-max(0.0,2.848526,1.518685)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn335i:=evalf(20836612225.1252*T*exp(-max(0.0,1.329841,-1.518685)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn336d:=evalf(20836612225.1252*T*exp(-max(0.0,2.000677,1.604935)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn336i:=evalf(20836612225.1252*T*exp(-max(0.0,0.395742,-1.604935)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn337d:=evalf(20836612225.1252*T*exp(-max(0.0,2.148996,1.281726)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn337i:=evalf(20836612225.1252*T*exp(-max(0.0,0.867270,-1.281726)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn338d:=evalf(20836612225.1252*T*exp(-max(0.0,2.382901,1.304962)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn338i:=evalf(20836612225.1252*T*exp(-max(0.0,1.077938,-1.304962)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn339d:=evalf(20836612225.1252*T*exp(-max(0.0,1.477816,1.021173)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn339i:=evalf(20836612225.1252*T*exp(-max(0.0,0.456644,-1.021173)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn340d:=evalf(20836612225.1252*T*exp(-max(0.0,1.468974,1.042292)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn340i:=evalf(20836612225.1252*T*exp(-max(0.0,0.426682,-1.042292)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn341d:=evalf(20836612225.1252*T*exp(-max(0.0,1.625803,0.534302)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn341i:=evalf(20836612225.1252*T*exp(-max(0.0,1.091501,-0.534302)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn342d:=evalf(20836612225.1252*T*exp(-max(0.0,2.000674,1.661351)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn342i:=evalf(20836612225.1252*T*exp(-max(0.0,0.339324,-1.661351)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn343d:=evalf(20836612225.1252*T*exp(-max(0.0,1.737712,1.200895)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn343i:=evalf(20836612225.1252*T*exp(-max(0.0,0.536817,-1.200895)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn344d:=evalf(20836612225.1252*T*exp(-max(0.0,1.271307,0.800517)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn344i:=evalf(20836612225.1252*T*exp(-max(0.0,0.470790,-0.800517)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn345d:=evalf(20836612225.1252*T*exp(-max(0.0,2.069756,1.546834)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn345i:=evalf(20836612225.1252*T*exp(-max(0.0,0.522921,-1.546834)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn346d:=evalf(20836612225.1252*T*exp(-max(0.0,1.239354,0.163008)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn346i:=evalf(20836612225.1252*T*exp(-max(0.0,1.076346,-0.163008)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn347d:=evalf(20836612225.1252*T*exp(-max(0.0,1.855596,1.292956)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn347i:=evalf(20836612225.1252*T*exp(-max(0.0,0.562640,-1.292956)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn348d:=evalf(20836612225.1252*T*exp(-max(0.0,1.615520,1.255416)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn348i:=evalf(20836612225.1252*T*exp(-max(0.0,0.360104,-1.255416)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn349d:=evalf(20836612225.1252*T*exp(-max(0.0,0.753889,-0.004220)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn349i:=evalf(20836612225.1252*T*exp(-max(0.0,0.758109,0.004220)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn350d:=evalf(20836612225.1252*T*exp(-max(0.0,1.518107,1.012901)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn350i:=evalf(20836612225.1252*T*exp(-max(0.0,0.505206,-1.012901)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn351d:=evalf(20836612225.1252*T*exp(-max(0.0,1.073897,0.168792)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn351i:=evalf(20836612225.1252*T*exp(-max(0.0,0.905105,-0.168792)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn352d:=evalf(20836612225.1252*T*exp(-max(0.0,1.813525,1.273438)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn352i:=evalf(20836612225.1252*T*exp(-max(0.0,0.540088,-1.273438)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn353d:=evalf(20836612225.1252*T*exp(-max(0.0,0.885091,-0.185126)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn353i:=evalf(20836612225.1252*T*exp(-max(0.0,1.070217,0.185126)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn354d:=evalf(20836612225.1252*T*exp(-max(0.0,0.523489,-0.161629)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn354i:=evalf(20836612225.1252*T*exp(-max(0.0,0.685118,0.161629)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn355d:=evalf(20836612225.1252*T*exp(-max(0.0,0.072393,-1.616539)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn355i:=evalf(20836612225.1252*T*exp(-max(0.0,1.688932,1.616539)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn356d:=evalf(20836612225.1252*T*exp(-max(0.0,1.465349,0.049935)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn356i:=evalf(20836612225.1252*T*exp(-max(0.0,1.415414,-0.049935)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn357d:=evalf(20836612225.1252*T*exp(-max(0.0,1.741014,0.824397)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn357i:=evalf(20836612225.1252*T*exp(-max(0.0,0.916617,-0.824397)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn358d:=evalf(20836612225.1252*T*exp(-max(0.0,1.073675,-0.087529)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn358i:=evalf(20836612225.1252*T*exp(-max(0.0,1.161204,0.087529)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn359d:=evalf(20836612225.1252*T*exp(-max(0.0,0.500261,-0.517459)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn359i:=evalf(20836612225.1252*T*exp(-max(0.0,1.017720,0.517459)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn360d:=evalf(20836612225.1252*T*exp(-max(0.0,1.370978,0.645554)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn360i:=evalf(20836612225.1252*T*exp(-max(0.0,0.725424,-0.645554)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn361d:=evalf(20836612225.1252*T*exp(-max(0.0,0.624088,-0.180608)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn361i:=evalf(20836612225.1252*T*exp(-max(0.0,0.804696,0.180608)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn362d:=evalf(20836612225.1252*T*exp(-max(0.0,0.294478,-0.278964)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn362i:=evalf(20836612225.1252*T*exp(-max(0.0,0.573442,0.278964)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn363d:=evalf(20836612225.1252*T*exp(-max(0.0,1.592221,-0.042573)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn363i:=evalf(20836612225.1252*T*exp(-max(0.0,1.634794,0.042573)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn364d:=evalf(20836612225.1252*T*exp(-max(0.0,0.651936,-0.606066)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn364i:=evalf(20836612225.1252*T*exp(-max(0.0,1.258003,0.606066)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn365d:=evalf(20836612225.1252*T*exp(-max(0.0,1.621702,0.780407)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn365i:=evalf(20836612225.1252*T*exp(-max(0.0,0.841295,-0.780407)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn366d:=evalf(20836612225.1252*T*exp(-max(0.0,2.149499,0.783961)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn366i:=evalf(20836612225.1252*T*exp(-max(0.0,1.365539,-0.783961)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn367d:=evalf(20836612225.1252*T*exp(-max(0.0,0.707293,-0.338455)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn367i:=evalf(20836612225.1252*T*exp(-max(0.0,1.045748,0.338455)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn368d:=evalf(20836612225.1252*T*exp(-max(0.0,1.283531,-0.138770)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn368i:=evalf(20836612225.1252*T*exp(-max(0.0,1.422300,0.138770)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn369d:=evalf(20836612225.1252*T*exp(-max(0.0,1.490082,-0.342740)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn369i:=evalf(20836612225.1252*T*exp(-max(0.0,1.832822,0.342740)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn370d:=evalf(20836612225.1252*T*exp(-max(0.0,0.509878,-0.697265)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn370i:=evalf(20836612225.1252*T*exp(-max(0.0,1.207143,0.697265)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn371d:=evalf(20836612225.1252*T*exp(-max(0.0,1.653573,0.428661)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn371i:=evalf(20836612225.1252*T*exp(-max(0.0,1.224912,-0.428661)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn372d:=evalf(20836612225.1252*T*exp(-max(0.0,1.838555,0.350291)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn372i:=evalf(20836612225.1252*T*exp(-max(0.0,1.488265,-0.350291)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn373d:=evalf(20836612225.1252*T*exp(-max(0.0,0.395480,-0.887239)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn373i:=evalf(20836612225.1252*T*exp(-max(0.0,1.282720,0.887239)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn374d:=evalf(20836612225.1252*T*exp(-max(0.0,1.423673,0.018674)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn374i:=evalf(20836612225.1252*T*exp(-max(0.0,1.404999,-0.018674)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn375d:=evalf(20836612225.1252*T*exp(-max(0.0,1.082359,-0.089901)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn375i:=evalf(20836612225.1252*T*exp(-max(0.0,1.172260,0.089901)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn376d:=evalf(20836612225.1252*T*exp(-max(0.0,2.666813,0.825493)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn376i:=evalf(20836612225.1252*T*exp(-max(0.0,1.841320,-0.825493)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn377d:=evalf(20836612225.1252*T*exp(-max(0.0,1.410637,0.036615)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn377i:=evalf(20836612225.1252*T*exp(-max(0.0,1.374022,-0.036615)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn378d:=evalf(20836612225.1252*T*exp(-max(0.0,1.927892,-0.151440)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn378i:=evalf(20836612225.1252*T*exp(-max(0.0,2.079332,0.151440)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn379d:=evalf(20836612225.1252*T*exp(-max(0.0,3.124577,1.429540)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn379i:=evalf(20836612225.1252*T*exp(-max(0.0,1.695037,-1.429540)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn380d:=evalf(20836612225.1252*T*exp(-max(0.0,1.637509,-0.156925)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn380i:=evalf(20836612225.1252*T*exp(-max(0.0,1.794434,0.156925)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn381d:=evalf(20836612225.1252*T*exp(-max(0.0,1.853452,0.245986)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn381i:=evalf(20836612225.1252*T*exp(-max(0.0,1.607465,-0.245986)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn382d:=evalf(20836612225.1252*T*exp(-max(0.0,1.824031,0.582837)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn382i:=evalf(20836612225.1252*T*exp(-max(0.0,1.241194,-0.582837)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn383d:=evalf(20836612225.1252*T*exp(-max(0.0,0.692438,-0.706463)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn383i:=evalf(20836612225.1252*T*exp(-max(0.0,1.398901,0.706463)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn384d:=evalf(20836612225.1252*T*exp(-max(0.0,1.131622,-0.142970)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn384i:=evalf(20836612225.1252*T*exp(-max(0.0,1.274592,0.142970)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn385d:=evalf(20836612225.1252*T*exp(-max(0.0,1.656635,0.599526)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn385i:=evalf(20836612225.1252*T*exp(-max(0.0,1.057109,-0.599526)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn386d:=evalf(20836612225.1252*T*exp(-max(0.0,1.178714,-0.017622)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn386i:=evalf(20836612225.1252*T*exp(-max(0.0,1.196337,0.017622)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn387d:=evalf(20836612225.1252*T*exp(-max(0.0,0.660532,-0.313504)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn387i:=evalf(20836612225.1252*T*exp(-max(0.0,0.974037,0.313504)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn388d:=evalf(20836612225.1252*T*exp(-max(0.0,0.578601,-0.885406)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn388i:=evalf(20836612225.1252*T*exp(-max(0.0,1.464007,0.885406)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn389d:=evalf(20836612225.1252*T*exp(-max(0.0,1.490593,0.504621)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn389i:=evalf(20836612225.1252*T*exp(-max(0.0,0.985973,-0.504621)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn390d:=evalf(20836612225.1252*T*exp(-max(0.0,1.240944,-0.713017)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn390i:=evalf(20836612225.1252*T*exp(-max(0.0,1.953962,0.713017)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn391d:=evalf(20836612225.1252*T*exp(-max(0.0,0.962605,-0.154522)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn391i:=evalf(20836612225.1252*T*exp(-max(0.0,1.117128,0.154522)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn392d:=evalf(20836612225.1252*T*exp(-max(0.0,1.488484,-0.423282)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn392i:=evalf(20836612225.1252*T*exp(-max(0.0,1.911765,0.423282)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn393d:=evalf(20836612225.1252*T*exp(-max(0.0,1.005542,-0.073291)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn393i:=evalf(20836612225.1252*T*exp(-max(0.0,1.078833,0.073291)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn394d:=evalf(20836612225.1252*T*exp(-max(0.0,2.117048,1.049125)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn394i:=evalf(20836612225.1252*T*exp(-max(0.0,1.067923,-1.049125)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn395d:=evalf(20836612225.1252*T*exp(-max(0.0,1.771897,0.619892)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn395i:=evalf(20836612225.1252*T*exp(-max(0.0,1.152005,-0.619892)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn396d:=evalf(20836612225.1252*T*exp(-max(0.0,1.283516,-0.128578)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn396i:=evalf(20836612225.1252*T*exp(-max(0.0,1.412094,0.128578)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn397d:=evalf(20836612225.1252*T*exp(-max(0.0,1.379635,-0.343804)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn397i:=evalf(20836612225.1252*T*exp(-max(0.0,1.723439,0.343804)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn398d:=evalf(20836612225.1252*T*exp(-max(0.0,1.853871,0.349226)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn398i:=evalf(20836612225.1252*T*exp(-max(0.0,1.504645,-0.349226)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn399d:=evalf(20836612225.1252*T*exp(-max(0.0,1.232127,-0.245025)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn399i:=evalf(20836612225.1252*T*exp(-max(0.0,1.477153,0.245025)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn400d:=evalf(20836612225.1252*T*exp(-max(0.0,2.143454,0.880901)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn400i:=evalf(20836612225.1252*T*exp(-max(0.0,1.262554,-0.880901)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn401d:=evalf(20836612225.1252*T*exp(-max(0.0,1.374072,-0.617509)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn401i:=evalf(20836612225.1252*T*exp(-max(0.0,1.991581,0.617509)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn402d:=evalf(20836612225.1252*T*exp(-max(0.0,1.216754,-0.508934)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn402i:=evalf(20836612225.1252*T*exp(-max(0.0,1.725688,0.508934)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn403d:=evalf(20836612225.1252*T*exp(-max(0.0,1.859053,0.251802)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn403i:=evalf(20836612225.1252*T*exp(-max(0.0,1.607251,-0.251802)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn404d:=evalf(20836612225.1252*T*exp(-max(0.0,1.467753,0.241259)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn404i:=evalf(20836612225.1252*T*exp(-max(0.0,1.226493,-0.241259)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn405d:=evalf(20836612225.1252*T*exp(-max(0.0,2.733790,1.557160)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn405i:=evalf(20836612225.1252*T*exp(-max(0.0,1.176631,-1.557160)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn406d:=evalf(20836612225.1252*T*exp(-max(0.0,1.171817,-0.028480)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn406i:=evalf(20836612225.1252*T*exp(-max(0.0,1.200297,0.028480)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn407d:=evalf(20836612225.1252*T*exp(-max(0.0,1.744006,-0.010540)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn407i:=evalf(20836612225.1252*T*exp(-max(0.0,1.754545,0.010540)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn408d:=evalf(20836612225.1252*T*exp(-max(0.0,1.311763,-0.806486)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn408i:=evalf(20836612225.1252*T*exp(-max(0.0,2.118249,0.806486)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn409d:=evalf(20836612225.1252*T*exp(-max(0.0,1.680423,0.108907)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn409i:=evalf(20836612225.1252*T*exp(-max(0.0,1.571516,-0.108907)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn410d:=evalf(20836612225.1252*T*exp(-max(0.0,1.660609,0.110469)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn410i:=evalf(20836612225.1252*T*exp(-max(0.0,1.550140,-0.110469)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn411d:=evalf(20836612225.1252*T*exp(-max(0.0,1.640892,-0.273380)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn411i:=evalf(20836612225.1252*T*exp(-max(0.0,1.914272,0.273380)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn412d:=evalf(20836612225.1252*T*exp(-max(0.0,1.924790,0.515498)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn412i:=evalf(20836612225.1252*T*exp(-max(0.0,1.409292,-0.515498)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn413d:=evalf(20836612225.1252*T*exp(-max(0.0,0.817436,-1.163573)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn413i:=evalf(20836612225.1252*T*exp(-max(0.0,1.981009,1.163573)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn414d:=evalf(20836612225.1252*T*exp(-max(0.0,2.346320,0.417407)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn414i:=evalf(20836612225.1252*T*exp(-max(0.0,1.928913,-0.417407)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn415d:=evalf(20836612225.1252*T*exp(-max(0.0,0.836318,-0.876478)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn415i:=evalf(20836612225.1252*T*exp(-max(0.0,1.712796,0.876478)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn416d:=evalf(20836612225.1252*T*exp(-max(0.0,0.672247,-0.121006)/(8.617333262145E-5*T)) ) :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">krxn416i:=evalf(20836612225.1252*T*exp(-max(0.0,0.793253,0.121006)/(8.617333262145E-5*T)) ) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Reaction rates:</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads001:=(t)-&gt; kads001d*Pg0201*ci0000(t) -kads001i*ci0201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads002:=(t)-&gt; kads002d*Pg0021*ci0000(t) -kads002i*ci0021(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads003:=(t)-&gt; kads003d*Pg0211*ci0000(t) -kads003i*ci0211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads004:=(t)-&gt; kads004d*Pg1401*ci0000(t) -kads004i*ci1401(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads005:=(t)-&gt; kads005d*Pg1411*ci0000(t) -kads005i*ci1411(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads006:=(t)-&gt; kads006d*Pg2601*ci0000(t) -kads006i*ci2601(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads007:=(t)-&gt; kads007d*Pg2611*ci0000(t) -kads007i*ci2611(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads008:=(t)-&gt; kads008d*Pg2621*ci0000(t) -kads008i*ci2621(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads009:=(t)-&gt; kads009d*Pg1011*ci0000(t) -kads009i*ci1011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads010:=(t)-&gt; kads010d*Pg1021*ci0000(t) -kads010i*ci1021(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads011:=(t)-&gt; kads011d*Pg1211*ci0000(t) -kads011i*ci1211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads012:=(t)-&gt; kads012d*Pg1221*ci0000(t) -kads012i*ci1221(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads013:=(t)-&gt; kads013d*Pg2402*ci0000(t) -kads013i*ci2402(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads014:=(t)-&gt; kads014d*Pg2202*ci0000(t) -kads014i*ci2202(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads015:=(t)-&gt; kads015d*Pg2411*ci0000(t) -kads015i*ci2411(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads016:=(t)-&gt; kads016d*Pg2414*ci0000(t) -kads016i*ci2414(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads017:=(t)-&gt; kads017d*Pg2211*ci0000(t) -kads017i*ci2211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads018:=(t)-&gt; kads018d*Pg2214*ci0000(t) -kads018i*ci2214(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads019:=(t)-&gt; kads019d*Pg2423*ci0000(t) -kads019i*ci2423(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads020:=(t)-&gt; kads020d*Pg2425*ci0000(t) -kads020i*ci2425(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads021:=(t)-&gt; kads021d*Pg2221*ci0000(t) -kads021i*ci2221(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads022:=(t)-&gt; kads022d*Pg2224*ci0000(t) -kads022i*ci2224(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rads023:=(t)-&gt; kads023d*Pg2225*ci0000(t) -kads023i*ci2225(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn101:=(t)-&gt; krxn101d*ci0201(t)*ci0000(t) -krxn101i*ci0101(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn102:=(t)-&gt; krxn102d*ci0021(t)*ci0000(t) -krxn102i*ci0011(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn103:=(t)-&gt; krxn103d*ci0211(t)*ci0000(t) -krxn103i*ci0111(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn104:=(t)-&gt; krxn104d*ci0211(t)*ci0011(t) -krxn104i*ci0111(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn105:=(t)-&gt; krxn105d*ci0111(t)*ci0000(t) -krxn105i*ci0011(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn106:=(t)-&gt; krxn106d*ci1401(t)*ci0000(t) -krxn106i*ci1301(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn107:=(t)-&gt; krxn107d*ci1301(t)*ci0000(t) -krxn107i*ci1201(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn108:=(t)-&gt; krxn108d*ci1201(t)*ci0000(t) -krxn108i*ci1101(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn109:=(t)-&gt; krxn109d*ci1101(t)*ci0000(t) -krxn109i*ci1001(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn110:=(t)-&gt; krxn110d*ci1411(t)*ci0000(t) -krxn110i*ci1311(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn111:=(t)-&gt; krxn111d*ci1312(t)*ci0000(t) -krxn111i*ci1211(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn112:=(t)-&gt; krxn112d*ci1212(t)*ci0000(t) -krxn112i*ci1111(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn113:=(t)-&gt; krxn113d*ci1112(t)*ci0000(t) -krxn113i*ci1011(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn114:=(t)-&gt; krxn114d*ci1411(t)*ci0000(t) -krxn114i*ci1312(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn115:=(t)-&gt; krxn115d*ci1311(t)*ci0000(t) -krxn115i*ci1211(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn116:=(t)-&gt; krxn116d*ci1312(t)*ci0000(t) -krxn116i*ci1212(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn117:=(t)-&gt; krxn117d*ci1211(t)*ci0000(t) -krxn117i*ci1111(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn118:=(t)-&gt; krxn118d*ci1212(t)*ci0000(t) -krxn118i*ci1112(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn119:=(t)-&gt; krxn119d*ci1111(t)*ci0000(t) -krxn119i*ci1011(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn120:=(t)-&gt; krxn120d*ci1411(t)*ci0000(t) -krxn120i*ci1301(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn121:=(t)-&gt; krxn121d*ci1311(t)*ci0000(t) -krxn121i*ci1301(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn122:=(t)-&gt; krxn122d*ci1312(t)*ci0000(t) -krxn122i*ci1201(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn123:=(t)-&gt; krxn123d*ci1211(t)*ci0000(t) -krxn123i*ci1201(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn124:=(t)-&gt; krxn124d*ci1212(t)*ci0000(t) -krxn124i*ci1101(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn125:=(t)-&gt; krxn125d*ci1111(t)*ci0000(t) -krxn125i*ci1101(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn126:=(t)-&gt; krxn126d*ci1112(t)*ci0000(t) -krxn126i*ci1001(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn127:=(t)-&gt; krxn127d*ci1011(t)*ci0000(t) -krxn127i*ci1001(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn128:=(t)-&gt; krxn128d*ci1021(t)*ci0000(t) -krxn128i*ci1011(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn129:=(t)-&gt; krxn129d*ci1122(t)*ci0000(t) -krxn129i*ci1011(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn130:=(t)-&gt; krxn130d*ci1121(t)*ci0000(t) -krxn130i*ci1021(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn131:=(t)-&gt; krxn131d*ci1121(t)*ci0011(t) -krxn131i*ci1021(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn132:=(t)-&gt; krxn132d*ci1121(t)*ci0111(t) -krxn132i*ci1021(t)*ci0211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn133:=(t)-&gt; krxn133d*ci1221(t)*ci0000(t) -krxn133i*ci1121(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn134:=(t)-&gt; krxn134d*ci1122(t)*ci0000(t) -krxn134i*ci1021(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn135:=(t)-&gt; krxn135d*ci1122(t)*ci0011(t) -krxn135i*ci1021(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn136:=(t)-&gt; krxn136d*ci1122(t)*ci0111(t) -krxn136i*ci1021(t)*ci0211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn137:=(t)-&gt; krxn137d*ci1221(t)*ci0000(t) -krxn137i*ci1122(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn138:=(t)-&gt; krxn138d*ci1121(t)*ci0000(t) -krxn138i*ci1111(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn139:=(t)-&gt; krxn139d*ci1122(t)*ci0000(t) -krxn139i*ci1112(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn140:=(t)-&gt; krxn140d*ci1221(t)*ci0000(t) -krxn140i*ci1111(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn141:=(t)-&gt; krxn141d*ci1221(t)*ci0000(t) -krxn141i*ci1212(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn201:=(t)-&gt; krxn201d*ci2601(t)*ci0000(t) -krxn201i*ci2501(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn202:=(t)-&gt; krxn202d*ci2501(t)*ci0000(t) -krxn202i*ci2401(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn203:=(t)-&gt; krxn203d*ci2501(t)*ci0000(t) -krxn203i*ci2402(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn204:=(t)-&gt; krxn204d*ci2401(t)*ci0000(t) -krxn204i*ci2301(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn205:=(t)-&gt; krxn205d*ci2401(t)*ci0000(t) -krxn205i*ci2302(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn206:=(t)-&gt; krxn206d*ci2402(t)*ci0000(t) -krxn206i*ci2302(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn207:=(t)-&gt; krxn207d*ci2301(t)*ci0000(t) -krxn207i*ci2201(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn208:=(t)-&gt; krxn208d*ci2302(t)*ci0000(t) -krxn208i*ci2201(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn209:=(t)-&gt; krxn209d*ci2302(t)*ci0000(t) -krxn209i*ci2202(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn210:=(t)-&gt; krxn210d*ci2201(t)*ci0000(t) -krxn210i*ci2101(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn211:=(t)-&gt; krxn211d*ci2202(t)*ci0000(t) -krxn211i*ci2101(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn212:=(t)-&gt; krxn212d*ci2101(t)*ci0000(t) -krxn212i*ci2001(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn213:=(t)-&gt; krxn213d*ci2611(t)*ci0000(t) -krxn213i*ci2511(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn214:=(t)-&gt; krxn214d*ci2611(t)*ci0000(t) -krxn214i*ci2512(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn215:=(t)-&gt; krxn215d*ci2611(t)*ci0000(t) -krxn215i*ci2513(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn216:=(t)-&gt; krxn216d*ci2511(t)*ci0000(t) -krxn216i*ci2411(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn217:=(t)-&gt; krxn217d*ci2511(t)*ci0000(t) -krxn217i*ci2412(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn218:=(t)-&gt; krxn218d*ci2512(t)*ci0000(t) -krxn218i*ci2411(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn219:=(t)-&gt; krxn219d*ci2512(t)*ci0000(t) -krxn219i*ci2413(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn220:=(t)-&gt; krxn220d*ci2512(t)*ci0000(t) -krxn220i*ci2414(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn221:=(t)-&gt; krxn221d*ci2513(t)*ci0000(t) -krxn221i*ci2412(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn222:=(t)-&gt; krxn222d*ci2513(t)*ci0000(t) -krxn222i*ci2414(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn223:=(t)-&gt; krxn223d*ci2513(t)*ci0000(t) -krxn223i*ci2415(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn224:=(t)-&gt; krxn224d*ci2411(t)*ci0000(t) -krxn224i*ci2311(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn225:=(t)-&gt; krxn225d*ci2411(t)*ci0000(t) -krxn225i*ci2312(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn226:=(t)-&gt; krxn226d*ci2412(t)*ci0000(t) -krxn226i*ci2312(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn227:=(t)-&gt; krxn227d*ci2412(t)*ci0000(t) -krxn227i*ci2313(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn228:=(t)-&gt; krxn228d*ci2413(t)*ci0000(t) -krxn228i*ci2311(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn229:=(t)-&gt; krxn229d*ci2413(t)*ci0000(t) -krxn229i*ci2314(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn230:=(t)-&gt; krxn230d*ci2414(t)*ci0000(t) -krxn230i*ci2312(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn231:=(t)-&gt; krxn231d*ci2414(t)*ci0000(t) -krxn231i*ci2314(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn232:=(t)-&gt; krxn232d*ci2414(t)*ci0000(t) -krxn232i*ci2315(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn233:=(t)-&gt; krxn233d*ci2415(t)*ci0000(t) -krxn233i*ci2313(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn234:=(t)-&gt; krxn234d*ci2415(t)*ci0000(t) -krxn234i*ci2315(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn235:=(t)-&gt; krxn235d*ci2415(t)*ci0000(t) -krxn235i*ci2316(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn236:=(t)-&gt; krxn236d*ci2311(t)*ci0000(t) -krxn236i*ci2211(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn237:=(t)-&gt; krxn237d*ci2312(t)*ci0000(t) -krxn237i*ci2211(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn238:=(t)-&gt; krxn238d*ci2312(t)*ci0000(t) -krxn238i*ci2212(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn239:=(t)-&gt; krxn239d*ci2313(t)*ci0000(t) -krxn239i*ci2212(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn240:=(t)-&gt; krxn240d*ci2313(t)*ci0000(t) -krxn240i*ci2213(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn241:=(t)-&gt; krxn241d*ci2314(t)*ci0000(t) -krxn241i*ci2211(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn242:=(t)-&gt; krxn242d*ci2314(t)*ci0000(t) -krxn242i*ci2214(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn243:=(t)-&gt; krxn243d*ci2315(t)*ci0000(t) -krxn243i*ci2212(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn244:=(t)-&gt; krxn244d*ci2315(t)*ci0000(t) -krxn244i*ci2214(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn245:=(t)-&gt; krxn245d*ci2315(t)*ci0000(t) -krxn245i*ci2215(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn246:=(t)-&gt; krxn246d*ci2316(t)*ci0000(t) -krxn246i*ci2213(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn247:=(t)-&gt; krxn247d*ci2316(t)*ci0000(t) -krxn247i*ci2215(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn248:=(t)-&gt; krxn248d*ci2211(t)*ci0000(t) -krxn248i*ci2111(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn249:=(t)-&gt; krxn249d*ci2212(t)*ci0000(t) -krxn249i*ci2111(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn250:=(t)-&gt; krxn250d*ci2212(t)*ci0000(t) -krxn250i*ci2112(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn251:=(t)-&gt; krxn251d*ci2213(t)*ci0000(t) -krxn251i*ci2112(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn252:=(t)-&gt; krxn252d*ci2214(t)*ci0000(t) -krxn252i*ci2111(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn253:=(t)-&gt; krxn253d*ci2214(t)*ci0000(t) -krxn253i*ci2113(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn254:=(t)-&gt; krxn254d*ci2215(t)*ci0000(t) -krxn254i*ci2112(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn255:=(t)-&gt; krxn255d*ci2215(t)*ci0000(t) -krxn255i*ci2113(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn256:=(t)-&gt; krxn256d*ci2111(t)*ci0000(t) -krxn256i*ci2011(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn257:=(t)-&gt; krxn257d*ci2112(t)*ci0000(t) -krxn257i*ci2011(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn258:=(t)-&gt; krxn258d*ci2113(t)*ci0000(t) -krxn258i*ci2011(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn259:=(t)-&gt; krxn259d*ci2621(t)*ci0000(t) -krxn259i*ci2521(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn260:=(t)-&gt; krxn260d*ci2621(t)*ci0000(t) -krxn260i*ci2522(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn261:=(t)-&gt; krxn261d*ci2521(t)*ci0000(t) -krxn261i*ci2421(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn262:=(t)-&gt; krxn262d*ci2521(t)*ci0000(t) -krxn262i*ci2422(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn263:=(t)-&gt; krxn263d*ci2521(t)*ci0000(t) -krxn263i*ci2423(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn264:=(t)-&gt; krxn264d*ci2522(t)*ci0000(t) -krxn264i*ci2422(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn265:=(t)-&gt; krxn265d*ci2522(t)*ci0000(t) -krxn265i*ci2423(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn266:=(t)-&gt; krxn266d*ci2522(t)*ci0000(t) -krxn266i*ci2424(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn267:=(t)-&gt; krxn267d*ci2522(t)*ci0000(t) -krxn267i*ci2425(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn268:=(t)-&gt; krxn268d*ci2421(t)*ci0000(t) -krxn268i*ci2321(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn269:=(t)-&gt; krxn269d*ci2422(t)*ci0000(t) -krxn269i*ci2321(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn270:=(t)-&gt; krxn270d*ci2422(t)*ci0000(t) -krxn270i*ci2322(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn271:=(t)-&gt; krxn271d*ci2422(t)*ci0000(t) -krxn271i*ci2323(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn272:=(t)-&gt; krxn272d*ci2423(t)*ci0000(t) -krxn272i*ci2321(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn273:=(t)-&gt; krxn273d*ci2423(t)*ci0000(t) -krxn273i*ci2323(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn274:=(t)-&gt; krxn274d*ci2423(t)*ci0000(t) -krxn274i*ci2324(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn275:=(t)-&gt; krxn275d*ci2424(t)*ci0000(t) -krxn275i*ci2322(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn276:=(t)-&gt; krxn276d*ci2424(t)*ci0000(t) -krxn276i*ci2324(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn277:=(t)-&gt; krxn277d*ci2424(t)*ci0000(t) -krxn277i*ci2325(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn278:=(t)-&gt; krxn278d*ci2425(t)*ci0000(t) -krxn278i*ci2323(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn279:=(t)-&gt; krxn279d*ci2425(t)*ci0000(t) -krxn279i*ci2325(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn280:=(t)-&gt; krxn280d*ci2321(t)*ci0000(t) -krxn280i*ci2221(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn281:=(t)-&gt; krxn281d*ci2321(t)*ci0000(t) -krxn281i*ci2222(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn282:=(t)-&gt; krxn282d*ci2322(t)*ci0000(t) -krxn282i*ci2222(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn283:=(t)-&gt; krxn283d*ci2322(t)*ci0000(t) -krxn283i*ci2223(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn284:=(t)-&gt; krxn284d*ci2323(t)*ci0000(t) -krxn284i*ci2221(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn285:=(t)-&gt; krxn285d*ci2323(t)*ci0000(t) -krxn285i*ci2223(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn286:=(t)-&gt; krxn286d*ci2323(t)*ci0000(t) -krxn286i*ci2224(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn287:=(t)-&gt; krxn287d*ci2324(t)*ci0000(t) -krxn287i*ci2222(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn288:=(t)-&gt; krxn288d*ci2324(t)*ci0000(t) -krxn288i*ci2224(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn289:=(t)-&gt; krxn289d*ci2325(t)*ci0000(t) -krxn289i*ci2223(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn290:=(t)-&gt; krxn290d*ci2325(t)*ci0000(t) -krxn290i*ci2224(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn291:=(t)-&gt; krxn291d*ci2325(t)*ci0000(t) -krxn291i*ci2225(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn292:=(t)-&gt; krxn292d*ci2221(t)*ci0000(t) -krxn292i*ci2121(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn293:=(t)-&gt; krxn293d*ci2222(t)*ci0000(t) -krxn293i*ci2121(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn294:=(t)-&gt; krxn294d*ci2223(t)*ci0000(t) -krxn294i*ci2121(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn295:=(t)-&gt; krxn295d*ci2223(t)*ci0000(t) -krxn295i*ci2122(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn296:=(t)-&gt; krxn296d*ci2224(t)*ci0000(t) -krxn296i*ci2121(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn297:=(t)-&gt; krxn297d*ci2224(t)*ci0000(t) -krxn297i*ci2122(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn298:=(t)-&gt; krxn298d*ci2225(t)*ci0000(t) -krxn298i*ci2122(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn299:=(t)-&gt; krxn299d*ci2121(t)*ci0000(t) -krxn299i*ci2021(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn300:=(t)-&gt; krxn300d*ci2122(t)*ci0000(t) -krxn300i*ci2021(t)*ci0101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn301:=(t)-&gt; krxn301d*ci2601(t)*ci0000(t) -krxn301i*ci1301(t)*ci1301(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn302:=(t)-&gt; krxn302d*ci2501(t)*ci0000(t) -krxn302i*ci1301(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn303:=(t)-&gt; krxn303d*ci2401(t)*ci0000(t) -krxn303i*ci1301(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn304:=(t)-&gt; krxn304d*ci2402(t)*ci0000(t) -krxn304i*ci1201(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn305:=(t)-&gt; krxn305d*ci2301(t)*ci0000(t) -krxn305i*ci1301(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn306:=(t)-&gt; krxn306d*ci2302(t)*ci0000(t) -krxn306i*ci1201(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn307:=(t)-&gt; krxn307d*ci2201(t)*ci0000(t) -krxn307i*ci1201(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn308:=(t)-&gt; krxn308d*ci2202(t)*ci0000(t) -krxn308i*ci1101(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn309:=(t)-&gt; krxn309d*ci2101(t)*ci0000(t) -krxn309i*ci1101(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn310:=(t)-&gt; krxn310d*ci2001(t)*ci0000(t) -krxn310i*ci1001(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn311:=(t)-&gt; krxn311d*ci2611(t)*ci0000(t) -krxn311i*ci1312(t)*ci1301(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn312:=(t)-&gt; krxn312d*ci2511(t)*ci0000(t) -krxn312i*ci1211(t)*ci1301(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn313:=(t)-&gt; krxn313d*ci2512(t)*ci0000(t) -krxn313i*ci1212(t)*ci1301(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn314:=(t)-&gt; krxn314d*ci2513(t)*ci0000(t) -krxn314i*ci1312(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn315:=(t)-&gt; krxn315d*ci2411(t)*ci0000(t) -krxn315i*ci1111(t)*ci1301(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn316:=(t)-&gt; krxn316d*ci2412(t)*ci0000(t) -krxn316i*ci1211(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn317:=(t)-&gt; krxn317d*ci2413(t)*ci0000(t) -krxn317i*ci1112(t)*ci1301(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn318:=(t)-&gt; krxn318d*ci2414(t)*ci0000(t) -krxn318i*ci1212(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn319:=(t)-&gt; krxn319d*ci2415(t)*ci0000(t) -krxn319i*ci1312(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn320:=(t)-&gt; krxn320d*ci2311(t)*ci0000(t) -krxn320i*ci1011(t)*ci1301(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn321:=(t)-&gt; krxn321d*ci2312(t)*ci0000(t) -krxn321i*ci1111(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn322:=(t)-&gt; krxn322d*ci2313(t)*ci0000(t) -krxn322i*ci1211(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn323:=(t)-&gt; krxn323d*ci2314(t)*ci0000(t) -krxn323i*ci1112(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn324:=(t)-&gt; krxn324d*ci2315(t)*ci0000(t) -krxn324i*ci1212(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn325:=(t)-&gt; krxn325d*ci2316(t)*ci0000(t) -krxn325i*ci1312(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn326:=(t)-&gt; krxn326d*ci2211(t)*ci0000(t) -krxn326i*ci1011(t)*ci1201(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn327:=(t)-&gt; krxn327d*ci2212(t)*ci0000(t) -krxn327i*ci1111(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn328:=(t)-&gt; krxn328d*ci2213(t)*ci0000(t) -krxn328i*ci1211(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn329:=(t)-&gt; krxn329d*ci2214(t)*ci0000(t) -krxn329i*ci1112(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn330:=(t)-&gt; krxn330d*ci2215(t)*ci0000(t) -krxn330i*ci1212(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn331:=(t)-&gt; krxn331d*ci2111(t)*ci0000(t) -krxn331i*ci1011(t)*ci1101(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn332:=(t)-&gt; krxn332d*ci2112(t)*ci0000(t) -krxn332i*ci1111(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn333:=(t)-&gt; krxn333d*ci2113(t)*ci0000(t) -krxn333i*ci1112(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn334:=(t)-&gt; krxn334d*ci2011(t)*ci0000(t) -krxn334i*ci1011(t)*ci1001(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn335:=(t)-&gt; krxn335d*ci2621(t)*ci0000(t) -krxn335i*ci1312(t)*ci1312(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn336:=(t)-&gt; krxn336d*ci2521(t)*ci0000(t) -krxn336i*ci1312(t)*ci1211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn337:=(t)-&gt; krxn337d*ci2522(t)*ci0000(t) -krxn337i*ci1312(t)*ci1212(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn338:=(t)-&gt; krxn338d*ci2421(t)*ci0000(t) -krxn338i*ci1211(t)*ci1211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn339:=(t)-&gt; krxn339d*ci2422(t)*ci0000(t) -krxn339i*ci1212(t)*ci1211(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn340:=(t)-&gt; krxn340d*ci2423(t)*ci0000(t) -krxn340i*ci1312(t)*ci1111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn341:=(t)-&gt; krxn341d*ci2424(t)*ci0000(t) -krxn341i*ci1312(t)*ci1111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn342:=(t)-&gt; krxn342d*ci2425(t)*ci0000(t) -krxn342i*ci1212(t)*ci1212(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn343:=(t)-&gt; krxn343d*ci2321(t)*ci0000(t) -krxn343i*ci1211(t)*ci1111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn344:=(t)-&gt; krxn344d*ci2322(t)*ci0000(t) -krxn344i*ci1211(t)*ci1112(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn345:=(t)-&gt; krxn345d*ci2323(t)*ci0000(t) -krxn345i*ci1212(t)*ci1111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn346:=(t)-&gt; krxn346d*ci2324(t)*ci0000(t) -krxn346i*ci1312(t)*ci1011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn347:=(t)-&gt; krxn347d*ci2325(t)*ci0000(t) -krxn347i*ci1212(t)*ci1112(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn348:=(t)-&gt; krxn348d*ci2221(t)*ci0000(t) -krxn348i*ci1111(t)*ci1111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn349:=(t)-&gt; krxn349d*ci2222(t)*ci0000(t) -krxn349i*ci1211(t)*ci1011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn350:=(t)-&gt; krxn350d*ci2223(t)*ci0000(t) -krxn350i*ci1112(t)*ci1111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn351:=(t)-&gt; krxn351d*ci2224(t)*ci0000(t) -krxn351i*ci1212(t)*ci1011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn352:=(t)-&gt; krxn352d*ci2225(t)*ci0000(t) -krxn352i*ci1112(t)*ci1112(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn353:=(t)-&gt; krxn353d*ci2121(t)*ci0000(t) -krxn353i*ci1111(t)*ci1011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn354:=(t)-&gt; krxn354d*ci2122(t)*ci0000(t) -krxn354i*ci1112(t)*ci1011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn355:=(t)-&gt; krxn355d*ci2021(t)*ci0000(t) -krxn355i*ci1011(t)*ci1011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn356:=(t)-&gt; krxn356d*ci2611(t)*ci0000(t) -krxn356i*ci2501(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn357:=(t)-&gt; krxn357d*ci2511(t)*ci0000(t) -krxn357i*ci2501(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn358:=(t)-&gt; krxn358d*ci2512(t)*ci0000(t) -krxn358i*ci2401(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn359:=(t)-&gt; krxn359d*ci2513(t)*ci0000(t) -krxn359i*ci2402(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn360:=(t)-&gt; krxn360d*ci2411(t)*ci0000(t) -krxn360i*ci2401(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn361:=(t)-&gt; krxn361d*ci2412(t)*ci0000(t) -krxn361i*ci2402(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn362:=(t)-&gt; krxn362d*ci2413(t)*ci0000(t) -krxn362i*ci2301(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn363:=(t)-&gt; krxn363d*ci2414(t)*ci0000(t) -krxn363i*ci2302(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn364:=(t)-&gt; krxn364d*ci2415(t)*ci0000(t) -krxn364i*ci2302(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn365:=(t)-&gt; krxn365d*ci2311(t)*ci0000(t) -krxn365i*ci2301(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn366:=(t)-&gt; krxn366d*ci2312(t)*ci0000(t) -krxn366i*ci2302(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn367:=(t)-&gt; krxn367d*ci2313(t)*ci0000(t) -krxn367i*ci2302(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn368:=(t)-&gt; krxn368d*ci2314(t)*ci0000(t) -krxn368i*ci2201(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn369:=(t)-&gt; krxn369d*ci2315(t)*ci0000(t) -krxn369i*ci2202(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn370:=(t)-&gt; krxn370d*ci2316(t)*ci0000(t) -krxn370i*ci2201(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn371:=(t)-&gt; krxn371d*ci2211(t)*ci0000(t) -krxn371i*ci2201(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn372:=(t)-&gt; krxn372d*ci2212(t)*ci0000(t) -krxn372i*ci2202(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn373:=(t)-&gt; krxn373d*ci2213(t)*ci0000(t) -krxn373i*ci2201(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn374:=(t)-&gt; krxn374d*ci2214(t)*ci0000(t) -krxn374i*ci2101(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn375:=(t)-&gt; krxn375d*ci2215(t)*ci0000(t) -krxn375i*ci2101(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn376:=(t)-&gt; krxn376d*ci2111(t)*ci0000(t) -krxn376i*ci2101(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn377:=(t)-&gt; krxn377d*ci2112(t)*ci0000(t) -krxn377i*ci2101(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn378:=(t)-&gt; krxn378d*ci2113(t)*ci0000(t) -krxn378i*ci2001(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn379:=(t)-&gt; krxn379d*ci2011(t)*ci0000(t) -krxn379i*ci2001(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn380:=(t)-&gt; krxn380d*ci2621(t)*ci0000(t) -krxn380i*ci2513(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn381:=(t)-&gt; krxn381d*ci2521(t)*ci0000(t) -krxn381i*ci2412(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn382:=(t)-&gt; krxn382d*ci2521(t)*ci0000(t) -krxn382i*ci2513(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn383:=(t)-&gt; krxn383d*ci2522(t)*ci0000(t) -krxn383i*ci2414(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn384:=(t)-&gt; krxn384d*ci2522(t)*ci0000(t) -krxn384i*ci2415(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn385:=(t)-&gt; krxn385d*ci2421(t)*ci0000(t) -krxn385i*ci2412(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn386:=(t)-&gt; krxn386d*ci2422(t)*ci0000(t) -krxn386i*ci2313(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn387:=(t)-&gt; krxn387d*ci2422(t)*ci0000(t) -krxn387i*ci2414(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn388:=(t)-&gt; krxn388d*ci2423(t)*ci0000(t) -krxn388i*ci2312(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn389:=(t)-&gt; krxn389d*ci2423(t)*ci0000(t) -krxn389i*ci2415(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn390:=(t)-&gt; krxn390d*ci2424(t)*ci0000(t) -krxn390i*ci2314(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn391:=(t)-&gt; krxn391d*ci2424(t)*ci0000(t) -krxn391i*ci2316(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn392:=(t)-&gt; krxn392d*ci2425(t)*ci0000(t) -krxn392i*ci2315(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn393:=(t)-&gt; krxn393d*ci2321(t)*ci0000(t) -krxn393i*ci2312(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn394:=(t)-&gt; krxn394d*ci2321(t)*ci0000(t) -krxn394i*ci2313(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn395:=(t)-&gt; krxn395d*ci2322(t)*ci0000(t) -krxn395i*ci2213(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn396:=(t)-&gt; krxn396d*ci2322(t)*ci0000(t) -krxn396i*ci2314(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn397:=(t)-&gt; krxn397d*ci2323(t)*ci0000(t) -krxn397i*ci2212(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn398:=(t)-&gt; krxn398d*ci2323(t)*ci0000(t) -krxn398i*ci2315(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn399:=(t)-&gt; krxn399d*ci2324(t)*ci0000(t) -krxn399i*ci2211(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn400:=(t)-&gt; krxn400d*ci2324(t)*ci0000(t) -krxn400i*ci2316(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn401:=(t)-&gt; krxn401d*ci2325(t)*ci0000(t) -krxn401i*ci2214(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn402:=(t)-&gt; krxn402d*ci2325(t)*ci0000(t) -krxn402i*ci2215(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn403:=(t)-&gt; krxn403d*ci2221(t)*ci0000(t) -krxn403i*ci2212(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn404:=(t)-&gt; krxn404d*ci2222(t)*ci0000(t) -krxn404i*ci2211(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn405:=(t)-&gt; krxn405d*ci2222(t)*ci0000(t) -krxn405i*ci2213(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn406:=(t)-&gt; krxn406d*ci2223(t)*ci0000(t) -krxn406i*ci2112(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn407:=(t)-&gt; krxn407d*ci2223(t)*ci0000(t) -krxn407i*ci2214(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn408:=(t)-&gt; krxn408d*ci2224(t)*ci0000(t) -krxn408i*ci2111(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn409:=(t)-&gt; krxn409d*ci2224(t)*ci0000(t) -krxn409i*ci2215(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn410:=(t)-&gt; krxn410d*ci2225(t)*ci0000(t) -krxn410i*ci2113(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn411:=(t)-&gt; krxn411d*ci2121(t)*ci0000(t) -krxn411i*ci2111(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn412:=(t)-&gt; krxn412d*ci2121(t)*ci0000(t) -krxn412i*ci2112(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn413:=(t)-&gt; krxn413d*ci2122(t)*ci0000(t) -krxn413i*ci2011(t)*ci0111(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn414:=(t)-&gt; krxn414d*ci2122(t)*ci0000(t) -krxn414i*ci2113(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn415:=(t)-&gt; krxn415d*ci2021(t)*ci0000(t) -krxn415i*ci2011(t)*ci0011(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">rrxn416:=(t)-&gt; krxn416d*ci2414(t) -krxn416i*ci2411(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Site-balance equation: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">ci0000:=(t)-&gt; 1.0 -ci0011(t) -ci0021(t) -ci0101(t) -ci0111(t) -ci0201(t) -ci0211(t) -ci1001(t) -ci1011(t) -ci1021(t) -ci1101(t) -ci1111(t) -ci1112(t) -ci1121(t) -ci1122(t) -ci1201(t) -ci1211(t) -ci1212(t) -ci1221(t) -ci1301(t) -ci1311(t) -ci1312(t) -ci1401(t) -ci1411(t) -ci2001(t) -ci2011(t) -ci2021(t) -ci2101(t) -ci2111(t) -ci2112(t) -ci2113(t) -ci2121(t) -ci2122(t) -ci2201(t) -ci2202(t) -ci2211(t) -ci2212(t) -ci2213(t) -ci2214(t) -ci2215(t) -ci2221(t) -ci2222(t) -ci2223(t) -ci2224(t) -ci2225(t) -ci2301(t) -ci2302(t) -ci2311(t) -ci2312(t) -ci2313(t) -ci2314(t) -ci2315(t) -ci2316(t) -ci2321(t) -ci2322(t) -ci2323(t) -ci2324(t) -ci2325(t) -ci2401(t) -ci2402(t) -ci2411(t) -ci2412(t) -ci2413(t) -ci2414(t) -ci2415(t) -ci2421(t) -ci2422(t) -ci2423(t) -ci2424(t) -ci2425(t) -ci2501(t) -ci2511(t) -ci2512(t) -ci2513(t) -ci2521(t) -ci2522(t) -ci2601(t) -ci2611(t) -ci2621(t) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Differential equations: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi0011:=diff(ci0011(t),t)=+rrxn102(t)+rrxn102(t)-rrxn104(t)+rrxn105(t)+rrxn121(t)+rrxn123(t)+rrxn125(t)+rrxn127(t)+rrxn128(t)-rrxn131(t)-rrxn135(t)+rrxn138(t)+rrxn139(t)+rrxn141(t)+rrxn357(t)+rrxn360(t)+rrxn361(t)+rrxn365(t)+rrxn366(t)+rrxn367(t)+rrxn371(t)+rrxn372(t)+rrxn373(t)+rrxn376(t)+rrxn377(t)+rrxn379(t)+rrxn382(t)+rrxn385(t)+rrxn387(t)+rrxn389(t)+rrxn393(t)+rrxn394(t)+rrxn396(t)+rrxn398(t)+rrxn400(t)+rrxn403(t)+rrxn404(t)+rrxn405(t)+rrxn407(t)+rrxn409(t)+rrxn411(t)+rrxn412(t)+rrxn414(t)+rrxn415(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi0021:=diff(ci0021(t),t)=+rads002(t)-rrxn102(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi0101:=diff(ci0101(t),t)=+rrxn101(t)+rrxn101(t)+rrxn103(t)+rrxn105(t)+rrxn106(t)+rrxn107(t)+rrxn108(t)+rrxn109(t)+rrxn110(t)+rrxn111(t)+rrxn112(t)+rrxn113(t)+rrxn114(t)+rrxn115(t)+rrxn116(t)+rrxn117(t)+rrxn118(t)+rrxn119(t)+rrxn130(t)+rrxn133(t)+rrxn134(t)+rrxn137(t)+rrxn201(t)+rrxn202(t)+rrxn203(t)+rrxn204(t)+rrxn205(t)+rrxn206(t)+rrxn207(t)+rrxn208(t)+rrxn209(t)+rrxn210(t)+rrxn211(t)+rrxn212(t)+rrxn213(t)+rrxn214(t)+rrxn215(t)+rrxn216(t)+rrxn217(t)+rrxn218(t)+rrxn219(t)+rrxn220(t)+rrxn221(t)+rrxn222(t)+rrxn223(t)+rrxn224(t)+rrxn225(t)+rrxn226(t)+rrxn227(t)+rrxn228(t)+rrxn229(t)+rrxn230(t)+rrxn231(t)+rrxn232(t)+rrxn233(t)+rrxn234(t)+rrxn235(t)+rrxn236(t)+rrxn237(t)+rrxn238(t)+rrxn239(t)+rrxn240(t)+rrxn241(t)+rrxn242(t)+rrxn243(t)+rrxn244(t)+rrxn245(t)+rrxn246(t)+rrxn247(t)+rrxn248(t)+rrxn249(t)+rrxn250(t)+rrxn251(t)+rrxn252(t)+rrxn253(t)+rrxn254(t)+rrxn255(t)+rrxn256(t)+rrxn257(t)+rrxn258(t)+rrxn259(t)+rrxn260(t)+rrxn261(t)+rrxn262(t)+rrxn263(t)+rrxn264(t)+rrxn265(t)+rrxn266(t)+rrxn267(t)+rrxn268(t)+rrxn269(t)+rrxn270(t)+rrxn271(t)+rrxn272(t)+rrxn273(t)+rrxn274(t)+rrxn275(t)+rrxn276(t)+rrxn277(t)+rrxn278(t)+rrxn279(t)+rrxn280(t)+rrxn281(t)+rrxn282(t)+rrxn283(t)+rrxn284(t)+rrxn285(t)+rrxn286(t)+rrxn287(t)+rrxn288(t)+rrxn289(t)+rrxn290(t)+rrxn291(t)+rrxn292(t)+rrxn293(t)+rrxn294(t)+rrxn295(t)+rrxn296(t)+rrxn297(t)+rrxn298(t)+rrxn299(t)+rrxn300(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi0111:=diff(ci0111(t),t)=+rrxn103(t)+rrxn104(t)+rrxn104(t)-rrxn105(t)+rrxn120(t)+rrxn122(t)+rrxn124(t)+rrxn126(t)+rrxn129(t)+rrxn131(t)-rrxn132(t)+rrxn135(t)-rrxn136(t)+rrxn140(t)+rrxn356(t)+rrxn358(t)+rrxn359(t)+rrxn362(t)+rrxn363(t)+rrxn364(t)+rrxn368(t)+rrxn369(t)+rrxn370(t)+rrxn374(t)+rrxn375(t)+rrxn378(t)+rrxn380(t)+rrxn381(t)+rrxn383(t)+rrxn384(t)+rrxn386(t)+rrxn388(t)+rrxn390(t)+rrxn391(t)+rrxn392(t)+rrxn395(t)+rrxn397(t)+rrxn399(t)+rrxn401(t)+rrxn402(t)+rrxn406(t)+rrxn408(t)+rrxn410(t)+rrxn413(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi0201:=diff(ci0201(t),t)=+rads001(t)-rrxn101(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi0211:=diff(ci0211(t),t)=+rads003(t)-rrxn103(t)-rrxn104(t)+rrxn132(t)+rrxn136(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1001:=diff(ci1001(t),t)=+rrxn109(t)+rrxn126(t)+rrxn127(t)+rrxn305(t)+rrxn307(t)+rrxn309(t)+rrxn310(t)+rrxn310(t)+rrxn325(t)+rrxn328(t)+rrxn330(t)+rrxn332(t)+rrxn333(t)+rrxn334(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1011:=diff(ci1011(t),t)=+rads009(t)+rrxn113(t)+rrxn119(t)-rrxn127(t)+rrxn128(t)+rrxn129(t)+rrxn320(t)+rrxn326(t)+rrxn331(t)+rrxn334(t)+rrxn346(t)+rrxn349(t)+rrxn351(t)+rrxn353(t)+rrxn354(t)+rrxn355(t)+rrxn355(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1021:=diff(ci1021(t),t)=+rads010(t)-rrxn128(t)+rrxn130(t)+rrxn131(t)+rrxn132(t)+rrxn134(t)+rrxn135(t)+rrxn136(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1101:=diff(ci1101(t),t)=+rrxn108(t)-rrxn109(t)+rrxn124(t)+rrxn125(t)+rrxn303(t)+rrxn306(t)+rrxn308(t)+rrxn308(t)+rrxn309(t)+rrxn319(t)+rrxn322(t)+rrxn324(t)+rrxn327(t)+rrxn329(t)+rrxn331(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1111:=diff(ci1111(t),t)=+rrxn112(t)+rrxn117(t)-rrxn119(t)-rrxn125(t)+rrxn138(t)+rrxn140(t)+rrxn315(t)+rrxn321(t)+rrxn327(t)+rrxn332(t)+rrxn340(t)+rrxn341(t)+rrxn343(t)+rrxn345(t)+rrxn348(t)+rrxn348(t)+rrxn350(t)+rrxn353(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1112:=diff(ci1112(t),t)=-rrxn113(t)+rrxn118(t)-rrxn126(t)+rrxn139(t)+rrxn317(t)+rrxn323(t)+rrxn329(t)+rrxn333(t)+rrxn344(t)+rrxn347(t)+rrxn350(t)+rrxn352(t)+rrxn352(t)+rrxn354(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1121:=diff(ci1121(t),t)=-rrxn130(t)-rrxn131(t)-rrxn132(t)+rrxn133(t)-rrxn138(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1122:=diff(ci1122(t),t)=-rrxn129(t)-rrxn134(t)-rrxn135(t)-rrxn136(t)+rrxn137(t)-rrxn139(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1201:=diff(ci1201(t),t)=+rrxn107(t)-rrxn108(t)+rrxn122(t)+rrxn123(t)+rrxn302(t)+rrxn304(t)+rrxn304(t)+rrxn306(t)+rrxn307(t)+rrxn314(t)+rrxn316(t)+rrxn318(t)+rrxn321(t)+rrxn323(t)+rrxn326(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1211:=diff(ci1211(t),t)=+rads011(t)+rrxn111(t)+rrxn115(t)-rrxn117(t)-rrxn123(t)+rrxn312(t)+rrxn316(t)+rrxn322(t)+rrxn328(t)+rrxn336(t)+rrxn338(t)+rrxn338(t)+rrxn339(t)+rrxn343(t)+rrxn344(t)+rrxn349(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1212:=diff(ci1212(t),t)=-rrxn112(t)+rrxn116(t)-rrxn118(t)-rrxn124(t)+rrxn141(t)+rrxn313(t)+rrxn318(t)+rrxn324(t)+rrxn330(t)+rrxn337(t)+rrxn339(t)+rrxn342(t)+rrxn342(t)+rrxn345(t)+rrxn347(t)+rrxn351(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1221:=diff(ci1221(t),t)=+rads012(t)-rrxn133(t)-rrxn137(t)-rrxn140(t)-rrxn141(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1301:=diff(ci1301(t),t)=+rrxn106(t)-rrxn107(t)+rrxn120(t)+rrxn121(t)+rrxn301(t)+rrxn301(t)+rrxn302(t)+rrxn303(t)+rrxn305(t)+rrxn311(t)+rrxn312(t)+rrxn313(t)+rrxn315(t)+rrxn317(t)+rrxn320(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1311:=diff(ci1311(t),t)=+rrxn110(t)-rrxn115(t)-rrxn121(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1312:=diff(ci1312(t),t)=-rrxn111(t)+rrxn114(t)-rrxn116(t)-rrxn122(t)+rrxn311(t)+rrxn314(t)+rrxn319(t)+rrxn325(t)+rrxn335(t)+rrxn335(t)+rrxn336(t)+rrxn337(t)+rrxn340(t)+rrxn341(t)+rrxn346(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1401:=diff(ci1401(t),t)=+rads004(t)-rrxn106(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi1411:=diff(ci1411(t),t)=+rads005(t)-rrxn110(t)-rrxn114(t)-rrxn120(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2001:=diff(ci2001(t),t)=+rrxn212(t)-rrxn310(t)+rrxn378(t)+rrxn379(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2011:=diff(ci2011(t),t)=+rrxn256(t)+rrxn257(t)+rrxn258(t)-rrxn334(t)-rrxn379(t)+rrxn413(t)+rrxn415(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2021:=diff(ci2021(t),t)=+rrxn299(t)+rrxn300(t)-rrxn355(t)-rrxn415(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2101:=diff(ci2101(t),t)=+rrxn210(t)+rrxn211(t)-rrxn212(t)-rrxn309(t)+rrxn374(t)+rrxn375(t)+rrxn376(t)+rrxn377(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2111:=diff(ci2111(t),t)=+rrxn248(t)+rrxn249(t)+rrxn252(t)-rrxn256(t)-rrxn331(t)-rrxn376(t)+rrxn408(t)+rrxn411(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2112:=diff(ci2112(t),t)=+rrxn250(t)+rrxn251(t)+rrxn254(t)-rrxn257(t)-rrxn332(t)-rrxn377(t)+rrxn406(t)+rrxn412(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2113:=diff(ci2113(t),t)=+rrxn253(t)+rrxn255(t)-rrxn258(t)-rrxn333(t)-rrxn378(t)+rrxn410(t)+rrxn414(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2121:=diff(ci2121(t),t)=+rrxn292(t)+rrxn293(t)+rrxn294(t)+rrxn296(t)-rrxn299(t)-rrxn353(t)-rrxn411(t)-rrxn412(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2122:=diff(ci2122(t),t)=+rrxn295(t)+rrxn297(t)+rrxn298(t)-rrxn300(t)-rrxn354(t)-rrxn413(t)-rrxn414(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2201:=diff(ci2201(t),t)=+rrxn207(t)+rrxn208(t)-rrxn210(t)-rrxn307(t)+rrxn368(t)+rrxn370(t)+rrxn371(t)+rrxn373(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2202:=diff(ci2202(t),t)=+rads014(t)+rrxn209(t)-rrxn211(t)-rrxn308(t)+rrxn369(t)+rrxn372(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2211:=diff(ci2211(t),t)=+rads017(t)+rrxn236(t)+rrxn237(t)+rrxn241(t)-rrxn248(t)-rrxn326(t)-rrxn371(t)+rrxn399(t)+rrxn404(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2212:=diff(ci2212(t),t)=+rrxn238(t)+rrxn239(t)+rrxn243(t)-rrxn249(t)-rrxn250(t)-rrxn327(t)-rrxn372(t)+rrxn397(t)+rrxn403(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2213:=diff(ci2213(t),t)=+rrxn240(t)+rrxn246(t)-rrxn251(t)-rrxn328(t)-rrxn373(t)+rrxn395(t)+rrxn405(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2214:=diff(ci2214(t),t)=+rads018(t)+rrxn242(t)+rrxn244(t)-rrxn252(t)-rrxn253(t)-rrxn329(t)-rrxn374(t)+rrxn401(t)+rrxn407(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2215:=diff(ci2215(t),t)=+rrxn245(t)+rrxn247(t)-rrxn254(t)-rrxn255(t)-rrxn330(t)-rrxn375(t)+rrxn402(t)+rrxn409(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2221:=diff(ci2221(t),t)=+rads021(t)+rrxn280(t)+rrxn284(t)-rrxn292(t)-rrxn348(t)-rrxn403(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2222:=diff(ci2222(t),t)=+rrxn281(t)+rrxn282(t)+rrxn287(t)-rrxn293(t)-rrxn349(t)-rrxn404(t)-rrxn405(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2223:=diff(ci2223(t),t)=+rrxn283(t)+rrxn285(t)+rrxn289(t)-rrxn294(t)-rrxn295(t)-rrxn350(t)-rrxn406(t)-rrxn407(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2224:=diff(ci2224(t),t)=+rads022(t)+rrxn286(t)+rrxn288(t)+rrxn290(t)-rrxn296(t)-rrxn297(t)-rrxn351(t)-rrxn408(t)-rrxn409(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2225:=diff(ci2225(t),t)=+rads023(t)+rrxn291(t)-rrxn298(t)-rrxn352(t)-rrxn410(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2301:=diff(ci2301(t),t)=+rrxn204(t)-rrxn207(t)-rrxn305(t)+rrxn362(t)+rrxn365(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2302:=diff(ci2302(t),t)=+rrxn205(t)+rrxn206(t)-rrxn208(t)-rrxn209(t)-rrxn306(t)+rrxn363(t)+rrxn364(t)+rrxn366(t)+rrxn367(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2311:=diff(ci2311(t),t)=+rrxn224(t)+rrxn228(t)-rrxn236(t)-rrxn320(t)-rrxn365(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2312:=diff(ci2312(t),t)=+rrxn225(t)+rrxn226(t)+rrxn230(t)-rrxn237(t)-rrxn238(t)-rrxn321(t)-rrxn366(t)+rrxn388(t)+rrxn393(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2313:=diff(ci2313(t),t)=+rrxn227(t)+rrxn233(t)-rrxn239(t)-rrxn240(t)-rrxn322(t)-rrxn367(t)+rrxn386(t)+rrxn394(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2314:=diff(ci2314(t),t)=+rrxn229(t)+rrxn231(t)-rrxn241(t)-rrxn242(t)-rrxn323(t)-rrxn368(t)+rrxn390(t)+rrxn396(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2315:=diff(ci2315(t),t)=+rrxn232(t)+rrxn234(t)-rrxn243(t)-rrxn244(t)-rrxn245(t)-rrxn324(t)-rrxn369(t)+rrxn392(t)+rrxn398(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2316:=diff(ci2316(t),t)=+rrxn235(t)-rrxn246(t)-rrxn247(t)-rrxn325(t)-rrxn370(t)+rrxn391(t)+rrxn400(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2321:=diff(ci2321(t),t)=+rrxn268(t)+rrxn269(t)+rrxn272(t)-rrxn280(t)-rrxn281(t)-rrxn343(t)-rrxn393(t)-rrxn394(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2322:=diff(ci2322(t),t)=+rrxn270(t)+rrxn275(t)-rrxn282(t)-rrxn283(t)-rrxn344(t)-rrxn395(t)-rrxn396(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2323:=diff(ci2323(t),t)=+rrxn271(t)+rrxn273(t)+rrxn278(t)-rrxn284(t)-rrxn285(t)-rrxn286(t)-rrxn345(t)-rrxn397(t)-rrxn398(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2324:=diff(ci2324(t),t)=+rrxn274(t)+rrxn276(t)-rrxn287(t)-rrxn288(t)-rrxn346(t)-rrxn399(t)-rrxn400(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2325:=diff(ci2325(t),t)=+rrxn277(t)+rrxn279(t)-rrxn289(t)-rrxn290(t)-rrxn291(t)-rrxn347(t)-rrxn401(t)-rrxn402(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2401:=diff(ci2401(t),t)=+rrxn202(t)-rrxn204(t)-rrxn205(t)-rrxn303(t)+rrxn358(t)+rrxn360(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2402:=diff(ci2402(t),t)=+rads013(t)+rrxn203(t)-rrxn206(t)-rrxn304(t)+rrxn359(t)+rrxn361(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2411:=diff(ci2411(t),t)=+rads015(t)+rrxn216(t)+rrxn218(t)-rrxn224(t)-rrxn225(t)-rrxn315(t)-rrxn360(t)+rrxn416(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2412:=diff(ci2412(t),t)=+rrxn217(t)+rrxn221(t)-rrxn226(t)-rrxn227(t)-rrxn316(t)-rrxn361(t)+rrxn381(t)+rrxn385(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2413:=diff(ci2413(t),t)=+rrxn219(t)-rrxn228(t)-rrxn229(t)-rrxn317(t)-rrxn362(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2414:=diff(ci2414(t),t)=+rads016(t)+rrxn220(t)+rrxn222(t)-rrxn230(t)-rrxn231(t)-rrxn232(t)-rrxn318(t)-rrxn363(t)+rrxn383(t)+rrxn387(t)-rrxn416(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2415:=diff(ci2415(t),t)=+rrxn223(t)-rrxn233(t)-rrxn234(t)-rrxn235(t)-rrxn319(t)-rrxn364(t)+rrxn384(t)+rrxn389(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2421:=diff(ci2421(t),t)=+rrxn261(t)-rrxn268(t)-rrxn338(t)-rrxn385(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2422:=diff(ci2422(t),t)=+rrxn262(t)+rrxn264(t)-rrxn269(t)-rrxn270(t)-rrxn271(t)-rrxn339(t)-rrxn386(t)-rrxn387(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2423:=diff(ci2423(t),t)=+rads019(t)+rrxn263(t)+rrxn265(t)-rrxn272(t)-rrxn273(t)-rrxn274(t)-rrxn340(t)-rrxn388(t)-rrxn389(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2424:=diff(ci2424(t),t)=+rrxn266(t)-rrxn275(t)-rrxn276(t)-rrxn277(t)-rrxn341(t)-rrxn390(t)-rrxn391(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2425:=diff(ci2425(t),t)=+rads020(t)+rrxn267(t)-rrxn278(t)-rrxn279(t)-rrxn342(t)-rrxn392(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2501:=diff(ci2501(t),t)=+rrxn201(t)-rrxn202(t)-rrxn203(t)-rrxn302(t)+rrxn356(t)+rrxn357(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2511:=diff(ci2511(t),t)=+rrxn213(t)-rrxn216(t)-rrxn217(t)-rrxn312(t)-rrxn357(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2512:=diff(ci2512(t),t)=+rrxn214(t)-rrxn218(t)-rrxn219(t)-rrxn220(t)-rrxn313(t)-rrxn358(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2513:=diff(ci2513(t),t)=+rrxn215(t)-rrxn221(t)-rrxn222(t)-rrxn223(t)-rrxn314(t)-rrxn359(t)+rrxn380(t)+rrxn382(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2521:=diff(ci2521(t),t)=+rrxn259(t)-rrxn261(t)-rrxn262(t)-rrxn263(t)-rrxn336(t)-rrxn381(t)-rrxn382(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2522:=diff(ci2522(t),t)=+rrxn260(t)-rrxn264(t)-rrxn265(t)-rrxn266(t)-rrxn267(t)-rrxn337(t)-rrxn383(t)-rrxn384(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2601:=diff(ci2601(t),t)=+rads006(t)-rrxn201(t)-rrxn301(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2611:=diff(ci2611(t),t)=+rads007(t)-rrxn213(t)-rrxn214(t)-rrxn215(t)-rrxn311(t)-rrxn356(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">eqdi2621:=diff(ci2621(t),t)=+rads008(t)-rrxn259(t)-rrxn260(t)-rrxn335(t)-rrxn380(t)  : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Initial conditions: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">IC0:= ci0011(0.0)=0.0, ci0021(0.0)=0.0, ci0101(0.0)=0.0, ci0111(0.0)=0.0, ci0201(0.0)=0.0, ci0211(0.0)=0.0, ci1001(0.0)=0.0, ci1011(0.0)=0.0, ci1021(0.0)=0.0, ci1101(0.0)=0.0, ci1111(0.0)=0.0, ci1112(0.0)=0.0, ci1121(0.0)=0.0, ci1122(0.0)=0.0, ci1201(0.0)=0.0, ci1211(0.0)=0.0, ci1212(0.0)=0.0, ci1221(0.0)=0.0, ci1301(0.0)=0.0, ci1311(0.0)=0.0, ci1312(0.0)=0.0, ci1401(0.0)=0.0, ci1411(0.0)=0.0, ci2001(0.0)=0.0, ci2011(0.0)=0.0, ci2021(0.0)=0.0, ci2101(0.0)=0.0, ci2111(0.0)=0.0, ci2112(0.0)=0.0, ci2113(0.0)=0.0, ci2121(0.0)=0.0, ci2122(0.0)=0.0, ci2201(0.0)=0.0, ci2202(0.0)=0.0, ci2211(0.0)=0.0, ci2212(0.0)=0.0, ci2213(0.0)=0.0, ci2214(0.0)=0.0, ci2215(0.0)=0.0, ci2221(0.0)=0.0, ci2222(0.0)=0.0, ci2223(0.0)=0.0, ci2224(0.0)=0.0, ci2225(0.0)=0.0, ci2301(0.0)=0.0, ci2302(0.0)=0.0, ci2311(0.0)=0.0, ci2312(0.0)=0.0, ci2313(0.0)=0.0, ci2314(0.0)=0.0, ci2315(0.0)=0.0, ci2316(0.0)=0.0, ci2321(0.0)=0.0, ci2322(0.0)=0.0, ci2323(0.0)=0.0, ci2324(0.0)=0.0, ci2325(0.0)=0.0, ci2401(0.0)=0.0, ci2402(0.0)=0.0, ci2411(0.0)=0.0, ci2412(0.0)=0.0, ci2413(0.0)=0.0, ci2414(0.0)=0.0, ci2415(0.0)=0.0, ci2421(0.0)=0.0, ci2422(0.0)=0.0, ci2423(0.0)=0.0, ci2424(0.0)=0.0, ci2425(0.0)=0.0, ci2501(0.0)=0.0, ci2511(0.0)=0.0, ci2512(0.0)=0.0, ci2513(0.0)=0.0, ci2521(0.0)=0.0, ci2522(0.0)=0.0, ci2601(0.0)=0.0, ci2611(0.0)=0.0, ci2621(0.0)=0.0 : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># SODE Solver: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">Solution:=dsolve({eqdi0011, eqdi0021, eqdi0101, eqdi0111, eqdi0201, eqdi0211, eqdi1001, eqdi1011, eqdi1021, eqdi1101, eqdi1111, eqdi1112, eqdi1121, eqdi1122, eqdi1201, eqdi1211, eqdi1212, eqdi1221, eqdi1301, eqdi1311, eqdi1312, eqdi1401, eqdi1411, eqdi2001, eqdi2011, eqdi2021, eqdi2101, eqdi2111, eqdi2112, eqdi2113, eqdi2121, eqdi2122, eqdi2201, eqdi2202, eqdi2211, eqdi2212, eqdi2213, eqdi2214, eqdi2215, eqdi2221, eqdi2222, eqdi2223, eqdi2224, eqdi2225, eqdi2301, eqdi2302, eqdi2311, eqdi2312, eqdi2313, eqdi2314, eqdi2315, eqdi2316, eqdi2321, eqdi2322, eqdi2323, eqdi2324, eqdi2325, eqdi2401, eqdi2402, eqdi2411, eqdi2412, eqdi2413, eqdi2414, eqdi2415, eqdi2421, eqdi2422, eqdi2423, eqdi2424, eqdi2425, eqdi2501, eqdi2511, eqdi2512, eqdi2513, eqdi2521, eqdi2522, eqdi2601, eqdi2611, eqdi2621, IC0}, numeric, method=rosenbrock, maxfun=0, abserr=1E-16, interr=false);</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">fprintf( &quot;Cu111-dd-1.xls&quot; ,&quot;%q %q\134n&quot;, catalyst, &quot;timei&quot;, &quot;T&quot;, &quot;Pg0021&quot;, &quot;Pg0201&quot;, &quot;Pg0211&quot;, &quot;Pg1011&quot;, &quot;Pg1021&quot;, &quot;Pg1211&quot;, &quot;Pg1221&quot;, &quot;Pg1401&quot;, &quot;Pg1411&quot;, &quot;Pg2202&quot;, &quot;Pg2211&quot;, &quot;Pg2214&quot;, &quot;Pg2221&quot;, &quot;Pg2224&quot;, &quot;Pg2225&quot;, &quot;Pg2402&quot;, &quot;Pg2411&quot;, &quot;Pg2414&quot;, &quot;Pg2423&quot;, &quot;Pg2425&quot;, &quot;Pg2601&quot;, &quot;Pg2611&quot;, &quot;Pg2621&quot; , &quot;sci0000&quot;, &quot;sci0011&quot;, &quot;sci0021&quot;, &quot;sci0101&quot;, &quot;sci0111&quot;, &quot;sci0201&quot;, &quot;sci0211&quot;, &quot;sci1001&quot;, &quot;sci1011&quot;, &quot;sci1021&quot;, &quot;sci1101&quot;, &quot;sci1111&quot;, &quot;sci1112&quot;, &quot;sci1121&quot;, &quot;sci1122&quot;, &quot;sci1201&quot;, &quot;sci1211&quot;, &quot;sci1212&quot;, &quot;sci1221&quot;, &quot;sci1301&quot;, &quot;sci1311&quot;, &quot;sci1312&quot;, &quot;sci1401&quot;, &quot;sci1411&quot;, &quot;sci2001&quot;, &quot;sci2011&quot;, &quot;sci2021&quot;, &quot;sci2101&quot;, &quot;sci2111&quot;, &quot;sci2112&quot;, &quot;sci2113&quot;, &quot;sci2121&quot;, &quot;sci2122&quot;, &quot;sci2201&quot;, &quot;sci2202&quot;, &quot;sci2211&quot;, &quot;sci2212&quot;, &quot;sci2213&quot;, &quot;sci2214&quot;, &quot;sci2215&quot;, &quot;sci2221&quot;, &quot;sci2222&quot;, &quot;sci2223&quot;, &quot;sci2224&quot;, &quot;sci2225&quot;, &quot;sci2301&quot;, &quot;sci2302&quot;, &quot;sci2311&quot;, &quot;sci2312&quot;, &quot;sci2313&quot;, &quot;sci2314&quot;, &quot;sci2315&quot;, &quot;sci2316&quot;, &quot;sci2321&quot;, &quot;sci2322&quot;, &quot;sci2323&quot;, &quot;sci2324&quot;, &quot;sci2325&quot;, &quot;sci2401&quot;, &quot;sci2402&quot;, &quot;sci2411&quot;, &quot;sci2412&quot;, &quot;sci2413&quot;, &quot;sci2414&quot;, &quot;sci2415&quot;, &quot;sci2421&quot;, &quot;sci2422&quot;, &quot;sci2423&quot;, &quot;sci2424&quot;, &quot;sci2425&quot;, &quot;sci2501&quot;, &quot;sci2511&quot;, &quot;sci2512&quot;, &quot;sci2513&quot;, &quot;sci2521&quot;, &quot;sci2522&quot;, &quot;sci2601&quot;, &quot;sci2611&quot;, &quot;sci2621&quot; , &quot;srads001&quot;, &quot;srads002&quot;, &quot;srads003&quot;, &quot;srads004&quot;, &quot;srads005&quot;, &quot;srads006&quot;, &quot;srads007&quot;, &quot;srads008&quot;, &quot;srads009&quot;, &quot;srads010&quot;, &quot;srads011&quot;, &quot;srads012&quot;, &quot;srads013&quot;, &quot;srads014&quot;, &quot;srads015&quot;, &quot;srads016&quot;, &quot;srads017&quot;, &quot;srads018&quot;, &quot;srads019&quot;, &quot;srads020&quot;, &quot;srads021&quot;, &quot;srads022&quot;, &quot;srads023&quot;, &quot;srrxn101&quot;, &quot;srrxn102&quot;, &quot;srrxn103&quot;, &quot;srrxn104&quot;, &quot;srrxn105&quot;, &quot;srrxn106&quot;, &quot;srrxn107&quot;, &quot;srrxn108&quot;, &quot;srrxn109&quot;, &quot;srrxn110&quot;, &quot;srrxn111&quot;, &quot;srrxn112&quot;, &quot;srrxn113&quot;, &quot;srrxn114&quot;, &quot;srrxn115&quot;, &quot;srrxn116&quot;, &quot;srrxn117&quot;, &quot;srrxn118&quot;, &quot;srrxn119&quot;, &quot;srrxn120&quot;, &quot;srrxn121&quot;, &quot;srrxn122&quot;, &quot;srrxn123&quot;, &quot;srrxn124&quot;, &quot;srrxn125&quot;, &quot;srrxn126&quot;, &quot;srrxn127&quot;, &quot;srrxn128&quot;, &quot;srrxn129&quot;, &quot;srrxn130&quot;, &quot;srrxn131&quot;, &quot;srrxn132&quot;, &quot;srrxn133&quot;, &quot;srrxn134&quot;, &quot;srrxn135&quot;, &quot;srrxn136&quot;, &quot;srrxn137&quot;, &quot;srrxn138&quot;, &quot;srrxn139&quot;, &quot;srrxn140&quot;, &quot;srrxn141&quot;, &quot;srrxn201&quot;, &quot;srrxn202&quot;, &quot;srrxn203&quot;, &quot;srrxn204&quot;, &quot;srrxn205&quot;, &quot;srrxn206&quot;, &quot;srrxn207&quot;, &quot;srrxn208&quot;, &quot;srrxn209&quot;, &quot;srrxn210&quot;, &quot;srrxn211&quot;, &quot;srrxn212&quot;, &quot;srrxn213&quot;, &quot;srrxn214&quot;, &quot;srrxn215&quot;, &quot;srrxn216&quot;, &quot;srrxn217&quot;, &quot;srrxn218&quot;, &quot;srrxn219&quot;, &quot;srrxn220&quot;, &quot;srrxn221&quot;, &quot;srrxn222&quot;, &quot;srrxn223&quot;, &quot;srrxn224&quot;, &quot;srrxn225&quot;, &quot;srrxn226&quot;, &quot;srrxn227&quot;, &quot;srrxn228&quot;, &quot;srrxn229&quot;, &quot;srrxn230&quot;, &quot;srrxn231&quot;, &quot;srrxn232&quot;, &quot;srrxn233&quot;, &quot;srrxn234&quot;, &quot;srrxn235&quot;, &quot;srrxn236&quot;, &quot;srrxn237&quot;, &quot;srrxn238&quot;, &quot;srrxn239&quot;, &quot;srrxn240&quot;, &quot;srrxn241&quot;, &quot;srrxn242&quot;, &quot;srrxn243&quot;, &quot;srrxn244&quot;, &quot;srrxn245&quot;, &quot;srrxn246&quot;, &quot;srrxn247&quot;, &quot;srrxn248&quot;, &quot;srrxn249&quot;, &quot;srrxn250&quot;, &quot;srrxn251&quot;, &quot;srrxn252&quot;, &quot;srrxn253&quot;, &quot;srrxn254&quot;, &quot;srrxn255&quot;, &quot;srrxn256&quot;, &quot;srrxn257&quot;, &quot;srrxn258&quot;, &quot;srrxn259&quot;, &quot;srrxn260&quot;, &quot;srrxn261&quot;, &quot;srrxn262&quot;, &quot;srrxn263&quot;, &quot;srrxn264&quot;, &quot;srrxn265&quot;, &quot;srrxn266&quot;, &quot;srrxn267&quot;, &quot;srrxn268&quot;, &quot;srrxn269&quot;, &quot;srrxn270&quot;, &quot;srrxn271&quot;, &quot;srrxn272&quot;, &quot;srrxn273&quot;, &quot;srrxn274&quot;, &quot;srrxn275&quot;, &quot;srrxn276&quot;, &quot;srrxn277&quot;, &quot;srrxn278&quot;, &quot;srrxn279&quot;, &quot;srrxn280&quot;, &quot;srrxn281&quot;, &quot;srrxn282&quot;, &quot;srrxn283&quot;, &quot;srrxn284&quot;, &quot;srrxn285&quot;, &quot;srrxn286&quot;, &quot;srrxn287&quot;, &quot;srrxn288&quot;, &quot;srrxn289&quot;, &quot;srrxn290&quot;, &quot;srrxn291&quot;, &quot;srrxn292&quot;, &quot;srrxn293&quot;, &quot;srrxn294&quot;, &quot;srrxn295&quot;, &quot;srrxn296&quot;, &quot;srrxn297&quot;, &quot;srrxn298&quot;, &quot;srrxn299&quot;, &quot;srrxn300&quot;, &quot;srrxn301&quot;, &quot;srrxn302&quot;, &quot;srrxn303&quot;, &quot;srrxn304&quot;, &quot;srrxn305&quot;, &quot;srrxn306&quot;, &quot;srrxn307&quot;, &quot;srrxn308&quot;, &quot;srrxn309&quot;, &quot;srrxn310&quot;, &quot;srrxn311&quot;, &quot;srrxn312&quot;, &quot;srrxn313&quot;, &quot;srrxn314&quot;, &quot;srrxn315&quot;, &quot;srrxn316&quot;, &quot;srrxn317&quot;, &quot;srrxn318&quot;, &quot;srrxn319&quot;, &quot;srrxn320&quot;, &quot;srrxn321&quot;, &quot;srrxn322&quot;, &quot;srrxn323&quot;, &quot;srrxn324&quot;, &quot;srrxn325&quot;, &quot;srrxn326&quot;, &quot;srrxn327&quot;, &quot;srrxn328&quot;, &quot;srrxn329&quot;, &quot;srrxn330&quot;, &quot;srrxn331&quot;, &quot;srrxn332&quot;, &quot;srrxn333&quot;, &quot;srrxn334&quot;, &quot;srrxn335&quot;, &quot;srrxn336&quot;, &quot;srrxn337&quot;, &quot;srrxn338&quot;, &quot;srrxn339&quot;, &quot;srrxn340&quot;, &quot;srrxn341&quot;, &quot;srrxn342&quot;, &quot;srrxn343&quot;, &quot;srrxn344&quot;, &quot;srrxn345&quot;, &quot;srrxn346&quot;, &quot;srrxn347&quot;, &quot;srrxn348&quot;, &quot;srrxn349&quot;, &quot;srrxn350&quot;, &quot;srrxn351&quot;, &quot;srrxn352&quot;, &quot;srrxn353&quot;, &quot;srrxn354&quot;, &quot;srrxn355&quot;, &quot;srrxn356&quot;, &quot;srrxn357&quot;, &quot;srrxn358&quot;, &quot;srrxn359&quot;, &quot;srrxn360&quot;, &quot;srrxn361&quot;, &quot;srrxn362&quot;, &quot;srrxn363&quot;, &quot;srrxn364&quot;, &quot;srrxn365&quot;, &quot;srrxn366&quot;, &quot;srrxn367&quot;, &quot;srrxn368&quot;, &quot;srrxn369&quot;, &quot;srrxn370&quot;, &quot;srrxn371&quot;, &quot;srrxn372&quot;, &quot;srrxn373&quot;, &quot;srrxn374&quot;, &quot;srrxn375&quot;, &quot;srrxn376&quot;, &quot;srrxn377&quot;, &quot;srrxn378&quot;, &quot;srrxn379&quot;, &quot;srrxn380&quot;, &quot;srrxn381&quot;, &quot;srrxn382&quot;, &quot;srrxn383&quot;, &quot;srrxn384&quot;, &quot;srrxn385&quot;, &quot;srrxn386&quot;, &quot;srrxn387&quot;, &quot;srrxn388&quot;, &quot;srrxn389&quot;, &quot;srrxn390&quot;, &quot;srrxn391&quot;, &quot;srrxn392&quot;, &quot;srrxn393&quot;, &quot;srrxn394&quot;, &quot;srrxn395&quot;, &quot;srrxn396&quot;, &quot;srrxn397&quot;, &quot;srrxn398&quot;, &quot;srrxn399&quot;, &quot;srrxn400&quot;, &quot;srrxn401&quot;, &quot;srrxn402&quot;, &quot;srrxn403&quot;, &quot;srrxn404&quot;, &quot;srrxn405&quot;, &quot;srrxn406&quot;, &quot;srrxn407&quot;, &quot;srrxn408&quot;, &quot;srrxn409&quot;, &quot;srrxn410&quot;, &quot;srrxn411&quot;, &quot;srrxn412&quot;, &quot;srrxn413&quot;, &quot;srrxn414&quot;, &quot;srrxn415&quot;, &quot;srrxn416&quot;  ): </Font></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"> </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">flush( &quot;Cu111-dd-1.xls&quot; ): </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">for timei in [1e-09, 1e-06, 0.001, 0.01, 0.1, 1.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, 10000000.0, 100000000.0, 1000000000.0, 10000000000.0, 100000000000.0, 1000000000000.0] do </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">S:=Solution(timei):</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Solution parser: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">sci0011:=rhs(S[2]) : sci0021:=rhs(S[3]) : sci0101:=rhs(S[4]) : sci0111:=rhs(S[5]) : sci0201:=rhs(S[6]) : sci0211:=rhs(S[7]) : sci1001:=rhs(S[8]) : sci1011:=rhs(S[9]) : sci1021:=rhs(S[10]) : sci1101:=rhs(S[11]) : sci1111:=rhs(S[12]) : sci1112:=rhs(S[13]) : sci1121:=rhs(S[14]) : sci1122:=rhs(S[15]) : sci1201:=rhs(S[16]) : sci1211:=rhs(S[17]) : sci1212:=rhs(S[18]) : sci1221:=rhs(S[19]) : sci1301:=rhs(S[20]) : sci1311:=rhs(S[21]) : sci1312:=rhs(S[22]) : sci1401:=rhs(S[23]) : sci1411:=rhs(S[24]) : sci2001:=rhs(S[25]) : sci2011:=rhs(S[26]) : sci2021:=rhs(S[27]) : sci2101:=rhs(S[28]) : sci2111:=rhs(S[29]) : sci2112:=rhs(S[30]) : sci2113:=rhs(S[31]) : sci2121:=rhs(S[32]) : sci2122:=rhs(S[33]) : sci2201:=rhs(S[34]) : sci2202:=rhs(S[35]) : sci2211:=rhs(S[36]) : sci2212:=rhs(S[37]) : sci2213:=rhs(S[38]) : sci2214:=rhs(S[39]) : sci2215:=rhs(S[40]) : sci2221:=rhs(S[41]) : sci2222:=rhs(S[42]) : sci2223:=rhs(S[43]) : sci2224:=rhs(S[44]) : sci2225:=rhs(S[45]) : sci2301:=rhs(S[46]) : sci2302:=rhs(S[47]) : sci2311:=rhs(S[48]) : sci2312:=rhs(S[49]) : sci2313:=rhs(S[50]) : sci2314:=rhs(S[51]) : sci2315:=rhs(S[52]) : sci2316:=rhs(S[53]) : sci2321:=rhs(S[54]) : sci2322:=rhs(S[55]) : sci2323:=rhs(S[56]) : sci2324:=rhs(S[57]) : sci2325:=rhs(S[58]) : sci2401:=rhs(S[59]) : sci2402:=rhs(S[60]) : sci2411:=rhs(S[61]) : sci2412:=rhs(S[62]) : sci2413:=rhs(S[63]) : sci2414:=rhs(S[64]) : sci2415:=rhs(S[65]) : sci2421:=rhs(S[66]) : sci2422:=rhs(S[67]) : sci2423:=rhs(S[68]) : sci2424:=rhs(S[69]) : sci2425:=rhs(S[70]) : sci2501:=rhs(S[71]) : sci2511:=rhs(S[72]) : sci2512:=rhs(S[73]) : sci2513:=rhs(S[74]) : sci2521:=rhs(S[75]) : sci2522:=rhs(S[76]) : sci2601:=rhs(S[77]) : sci2611:=rhs(S[78]) : sci2621:=rhs(S[79]) : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Site-balance equation after solver: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">sci0000:= 1.0 -sci0011 -sci0021 -sci0101 -sci0111 -sci0201 -sci0211 -sci1001 -sci1011 -sci1021 -sci1101 -sci1111 -sci1112 -sci1121 -sci1122 -sci1201 -sci1211 -sci1212 -sci1221 -sci1301 -sci1311 -sci1312 -sci1401 -sci1411 -sci2001 -sci2011 -sci2021 -sci2101 -sci2111 -sci2112 -sci2113 -sci2121 -sci2122 -sci2201 -sci2202 -sci2211 -sci2212 -sci2213 -sci2214 -sci2215 -sci2221 -sci2222 -sci2223 -sci2224 -sci2225 -sci2301 -sci2302 -sci2311 -sci2312 -sci2313 -sci2314 -sci2315 -sci2316 -sci2321 -sci2322 -sci2323 -sci2324 -sci2325 -sci2401 -sci2402 -sci2411 -sci2412 -sci2413 -sci2414 -sci2415 -sci2421 -sci2422 -sci2423 -sci2424 -sci2425 -sci2501 -sci2511 -sci2512 -sci2513 -sci2521 -sci2522 -sci2601 -sci2611 -sci2621 : </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"># Reaction rates after solver: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads001:= kads001d*Pg0201*sci0000 -kads001i*sci0201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads002:= kads002d*Pg0021*sci0000 -kads002i*sci0021 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads003:= kads003d*Pg0211*sci0000 -kads003i*sci0211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads004:= kads004d*Pg1401*sci0000 -kads004i*sci1401 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads005:= kads005d*Pg1411*sci0000 -kads005i*sci1411 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads006:= kads006d*Pg2601*sci0000 -kads006i*sci2601 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads007:= kads007d*Pg2611*sci0000 -kads007i*sci2611 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads008:= kads008d*Pg2621*sci0000 -kads008i*sci2621 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads009:= kads009d*Pg1011*sci0000 -kads009i*sci1011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads010:= kads010d*Pg1021*sci0000 -kads010i*sci1021 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads011:= kads011d*Pg1211*sci0000 -kads011i*sci1211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads012:= kads012d*Pg1221*sci0000 -kads012i*sci1221 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads013:= kads013d*Pg2402*sci0000 -kads013i*sci2402 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads014:= kads014d*Pg2202*sci0000 -kads014i*sci2202 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads015:= kads015d*Pg2411*sci0000 -kads015i*sci2411 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads016:= kads016d*Pg2414*sci0000 -kads016i*sci2414 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads017:= kads017d*Pg2211*sci0000 -kads017i*sci2211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads018:= kads018d*Pg2214*sci0000 -kads018i*sci2214 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads019:= kads019d*Pg2423*sci0000 -kads019i*sci2423 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads020:= kads020d*Pg2425*sci0000 -kads020i*sci2425 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads021:= kads021d*Pg2221*sci0000 -kads021i*sci2221 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads022:= kads022d*Pg2224*sci0000 -kads022i*sci2224 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srads023:= kads023d*Pg2225*sci0000 -kads023i*sci2225 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn101:= krxn101d*sci0201*sci0000 -krxn101i*sci0101*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn102:= krxn102d*sci0021*sci0000 -krxn102i*sci0011*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn103:= krxn103d*sci0211*sci0000 -krxn103i*sci0111*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn104:= krxn104d*sci0211*sci0011 -krxn104i*sci0111*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn105:= krxn105d*sci0111*sci0000 -krxn105i*sci0011*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn106:= krxn106d*sci1401*sci0000 -krxn106i*sci1301*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn107:= krxn107d*sci1301*sci0000 -krxn107i*sci1201*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn108:= krxn108d*sci1201*sci0000 -krxn108i*sci1101*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn109:= krxn109d*sci1101*sci0000 -krxn109i*sci1001*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn110:= krxn110d*sci1411*sci0000 -krxn110i*sci1311*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn111:= krxn111d*sci1312*sci0000 -krxn111i*sci1211*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn112:= krxn112d*sci1212*sci0000 -krxn112i*sci1111*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn113:= krxn113d*sci1112*sci0000 -krxn113i*sci1011*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn114:= krxn114d*sci1411*sci0000 -krxn114i*sci1312*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn115:= krxn115d*sci1311*sci0000 -krxn115i*sci1211*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn116:= krxn116d*sci1312*sci0000 -krxn116i*sci1212*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn117:= krxn117d*sci1211*sci0000 -krxn117i*sci1111*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn118:= krxn118d*sci1212*sci0000 -krxn118i*sci1112*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn119:= krxn119d*sci1111*sci0000 -krxn119i*sci1011*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn120:= krxn120d*sci1411*sci0000 -krxn120i*sci1301*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn121:= krxn121d*sci1311*sci0000 -krxn121i*sci1301*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn122:= krxn122d*sci1312*sci0000 -krxn122i*sci1201*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn123:= krxn123d*sci1211*sci0000 -krxn123i*sci1201*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn124:= krxn124d*sci1212*sci0000 -krxn124i*sci1101*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn125:= krxn125d*sci1111*sci0000 -krxn125i*sci1101*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn126:= krxn126d*sci1112*sci0000 -krxn126i*sci1001*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn127:= krxn127d*sci1011*sci0000 -krxn127i*sci1001*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn128:= krxn128d*sci1021*sci0000 -krxn128i*sci1011*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn129:= krxn129d*sci1122*sci0000 -krxn129i*sci1011*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn130:= krxn130d*sci1121*sci0000 -krxn130i*sci1021*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn131:= krxn131d*sci1121*sci0011 -krxn131i*sci1021*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn132:= krxn132d*sci1121*sci0111 -krxn132i*sci1021*sci0211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn133:= krxn133d*sci1221*sci0000 -krxn133i*sci1121*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn134:= krxn134d*sci1122*sci0000 -krxn134i*sci1021*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn135:= krxn135d*sci1122*sci0011 -krxn135i*sci1021*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn136:= krxn136d*sci1122*sci0111 -krxn136i*sci1021*sci0211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn137:= krxn137d*sci1221*sci0000 -krxn137i*sci1122*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn138:= krxn138d*sci1121*sci0000 -krxn138i*sci1111*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn139:= krxn139d*sci1122*sci0000 -krxn139i*sci1112*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn140:= krxn140d*sci1221*sci0000 -krxn140i*sci1111*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn141:= krxn141d*sci1221*sci0000 -krxn141i*sci1212*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn201:= krxn201d*sci2601*sci0000 -krxn201i*sci2501*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn202:= krxn202d*sci2501*sci0000 -krxn202i*sci2401*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn203:= krxn203d*sci2501*sci0000 -krxn203i*sci2402*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn204:= krxn204d*sci2401*sci0000 -krxn204i*sci2301*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn205:= krxn205d*sci2401*sci0000 -krxn205i*sci2302*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn206:= krxn206d*sci2402*sci0000 -krxn206i*sci2302*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn207:= krxn207d*sci2301*sci0000 -krxn207i*sci2201*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn208:= krxn208d*sci2302*sci0000 -krxn208i*sci2201*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn209:= krxn209d*sci2302*sci0000 -krxn209i*sci2202*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn210:= krxn210d*sci2201*sci0000 -krxn210i*sci2101*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn211:= krxn211d*sci2202*sci0000 -krxn211i*sci2101*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn212:= krxn212d*sci2101*sci0000 -krxn212i*sci2001*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn213:= krxn213d*sci2611*sci0000 -krxn213i*sci2511*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn214:= krxn214d*sci2611*sci0000 -krxn214i*sci2512*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn215:= krxn215d*sci2611*sci0000 -krxn215i*sci2513*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn216:= krxn216d*sci2511*sci0000 -krxn216i*sci2411*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn217:= krxn217d*sci2511*sci0000 -krxn217i*sci2412*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn218:= krxn218d*sci2512*sci0000 -krxn218i*sci2411*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn219:= krxn219d*sci2512*sci0000 -krxn219i*sci2413*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn220:= krxn220d*sci2512*sci0000 -krxn220i*sci2414*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn221:= krxn221d*sci2513*sci0000 -krxn221i*sci2412*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn222:= krxn222d*sci2513*sci0000 -krxn222i*sci2414*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn223:= krxn223d*sci2513*sci0000 -krxn223i*sci2415*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn224:= krxn224d*sci2411*sci0000 -krxn224i*sci2311*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn225:= krxn225d*sci2411*sci0000 -krxn225i*sci2312*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn226:= krxn226d*sci2412*sci0000 -krxn226i*sci2312*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn227:= krxn227d*sci2412*sci0000 -krxn227i*sci2313*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn228:= krxn228d*sci2413*sci0000 -krxn228i*sci2311*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn229:= krxn229d*sci2413*sci0000 -krxn229i*sci2314*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn230:= krxn230d*sci2414*sci0000 -krxn230i*sci2312*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn231:= krxn231d*sci2414*sci0000 -krxn231i*sci2314*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn232:= krxn232d*sci2414*sci0000 -krxn232i*sci2315*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn233:= krxn233d*sci2415*sci0000 -krxn233i*sci2313*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn234:= krxn234d*sci2415*sci0000 -krxn234i*sci2315*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn235:= krxn235d*sci2415*sci0000 -krxn235i*sci2316*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn236:= krxn236d*sci2311*sci0000 -krxn236i*sci2211*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn237:= krxn237d*sci2312*sci0000 -krxn237i*sci2211*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn238:= krxn238d*sci2312*sci0000 -krxn238i*sci2212*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn239:= krxn239d*sci2313*sci0000 -krxn239i*sci2212*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn240:= krxn240d*sci2313*sci0000 -krxn240i*sci2213*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn241:= krxn241d*sci2314*sci0000 -krxn241i*sci2211*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn242:= krxn242d*sci2314*sci0000 -krxn242i*sci2214*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn243:= krxn243d*sci2315*sci0000 -krxn243i*sci2212*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn244:= krxn244d*sci2315*sci0000 -krxn244i*sci2214*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn245:= krxn245d*sci2315*sci0000 -krxn245i*sci2215*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn246:= krxn246d*sci2316*sci0000 -krxn246i*sci2213*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn247:= krxn247d*sci2316*sci0000 -krxn247i*sci2215*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn248:= krxn248d*sci2211*sci0000 -krxn248i*sci2111*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn249:= krxn249d*sci2212*sci0000 -krxn249i*sci2111*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn250:= krxn250d*sci2212*sci0000 -krxn250i*sci2112*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn251:= krxn251d*sci2213*sci0000 -krxn251i*sci2112*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn252:= krxn252d*sci2214*sci0000 -krxn252i*sci2111*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn253:= krxn253d*sci2214*sci0000 -krxn253i*sci2113*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn254:= krxn254d*sci2215*sci0000 -krxn254i*sci2112*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn255:= krxn255d*sci2215*sci0000 -krxn255i*sci2113*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn256:= krxn256d*sci2111*sci0000 -krxn256i*sci2011*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn257:= krxn257d*sci2112*sci0000 -krxn257i*sci2011*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn258:= krxn258d*sci2113*sci0000 -krxn258i*sci2011*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn259:= krxn259d*sci2621*sci0000 -krxn259i*sci2521*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn260:= krxn260d*sci2621*sci0000 -krxn260i*sci2522*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn261:= krxn261d*sci2521*sci0000 -krxn261i*sci2421*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn262:= krxn262d*sci2521*sci0000 -krxn262i*sci2422*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn263:= krxn263d*sci2521*sci0000 -krxn263i*sci2423*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn264:= krxn264d*sci2522*sci0000 -krxn264i*sci2422*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn265:= krxn265d*sci2522*sci0000 -krxn265i*sci2423*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn266:= krxn266d*sci2522*sci0000 -krxn266i*sci2424*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn267:= krxn267d*sci2522*sci0000 -krxn267i*sci2425*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn268:= krxn268d*sci2421*sci0000 -krxn268i*sci2321*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn269:= krxn269d*sci2422*sci0000 -krxn269i*sci2321*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn270:= krxn270d*sci2422*sci0000 -krxn270i*sci2322*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn271:= krxn271d*sci2422*sci0000 -krxn271i*sci2323*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn272:= krxn272d*sci2423*sci0000 -krxn272i*sci2321*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn273:= krxn273d*sci2423*sci0000 -krxn273i*sci2323*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn274:= krxn274d*sci2423*sci0000 -krxn274i*sci2324*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn275:= krxn275d*sci2424*sci0000 -krxn275i*sci2322*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn276:= krxn276d*sci2424*sci0000 -krxn276i*sci2324*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn277:= krxn277d*sci2424*sci0000 -krxn277i*sci2325*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn278:= krxn278d*sci2425*sci0000 -krxn278i*sci2323*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn279:= krxn279d*sci2425*sci0000 -krxn279i*sci2325*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn280:= krxn280d*sci2321*sci0000 -krxn280i*sci2221*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn281:= krxn281d*sci2321*sci0000 -krxn281i*sci2222*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn282:= krxn282d*sci2322*sci0000 -krxn282i*sci2222*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn283:= krxn283d*sci2322*sci0000 -krxn283i*sci2223*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn284:= krxn284d*sci2323*sci0000 -krxn284i*sci2221*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn285:= krxn285d*sci2323*sci0000 -krxn285i*sci2223*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn286:= krxn286d*sci2323*sci0000 -krxn286i*sci2224*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn287:= krxn287d*sci2324*sci0000 -krxn287i*sci2222*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn288:= krxn288d*sci2324*sci0000 -krxn288i*sci2224*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn289:= krxn289d*sci2325*sci0000 -krxn289i*sci2223*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn290:= krxn290d*sci2325*sci0000 -krxn290i*sci2224*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn291:= krxn291d*sci2325*sci0000 -krxn291i*sci2225*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn292:= krxn292d*sci2221*sci0000 -krxn292i*sci2121*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn293:= krxn293d*sci2222*sci0000 -krxn293i*sci2121*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn294:= krxn294d*sci2223*sci0000 -krxn294i*sci2121*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn295:= krxn295d*sci2223*sci0000 -krxn295i*sci2122*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn296:= krxn296d*sci2224*sci0000 -krxn296i*sci2121*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn297:= krxn297d*sci2224*sci0000 -krxn297i*sci2122*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn298:= krxn298d*sci2225*sci0000 -krxn298i*sci2122*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn299:= krxn299d*sci2121*sci0000 -krxn299i*sci2021*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn300:= krxn300d*sci2122*sci0000 -krxn300i*sci2021*sci0101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn301:= krxn301d*sci2601*sci0000 -krxn301i*sci1301*sci1301 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn302:= krxn302d*sci2501*sci0000 -krxn302i*sci1301*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn303:= krxn303d*sci2401*sci0000 -krxn303i*sci1301*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn304:= krxn304d*sci2402*sci0000 -krxn304i*sci1201*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn305:= krxn305d*sci2301*sci0000 -krxn305i*sci1301*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn306:= krxn306d*sci2302*sci0000 -krxn306i*sci1201*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn307:= krxn307d*sci2201*sci0000 -krxn307i*sci1201*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn308:= krxn308d*sci2202*sci0000 -krxn308i*sci1101*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn309:= krxn309d*sci2101*sci0000 -krxn309i*sci1101*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn310:= krxn310d*sci2001*sci0000 -krxn310i*sci1001*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn311:= krxn311d*sci2611*sci0000 -krxn311i*sci1312*sci1301 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn312:= krxn312d*sci2511*sci0000 -krxn312i*sci1211*sci1301 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn313:= krxn313d*sci2512*sci0000 -krxn313i*sci1212*sci1301 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn314:= krxn314d*sci2513*sci0000 -krxn314i*sci1312*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn315:= krxn315d*sci2411*sci0000 -krxn315i*sci1111*sci1301 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn316:= krxn316d*sci2412*sci0000 -krxn316i*sci1211*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn317:= krxn317d*sci2413*sci0000 -krxn317i*sci1112*sci1301 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn318:= krxn318d*sci2414*sci0000 -krxn318i*sci1212*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn319:= krxn319d*sci2415*sci0000 -krxn319i*sci1312*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn320:= krxn320d*sci2311*sci0000 -krxn320i*sci1011*sci1301 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn321:= krxn321d*sci2312*sci0000 -krxn321i*sci1111*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn322:= krxn322d*sci2313*sci0000 -krxn322i*sci1211*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn323:= krxn323d*sci2314*sci0000 -krxn323i*sci1112*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn324:= krxn324d*sci2315*sci0000 -krxn324i*sci1212*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn325:= krxn325d*sci2316*sci0000 -krxn325i*sci1312*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn326:= krxn326d*sci2211*sci0000 -krxn326i*sci1011*sci1201 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn327:= krxn327d*sci2212*sci0000 -krxn327i*sci1111*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn328:= krxn328d*sci2213*sci0000 -krxn328i*sci1211*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn329:= krxn329d*sci2214*sci0000 -krxn329i*sci1112*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn330:= krxn330d*sci2215*sci0000 -krxn330i*sci1212*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn331:= krxn331d*sci2111*sci0000 -krxn331i*sci1011*sci1101 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn332:= krxn332d*sci2112*sci0000 -krxn332i*sci1111*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn333:= krxn333d*sci2113*sci0000 -krxn333i*sci1112*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn334:= krxn334d*sci2011*sci0000 -krxn334i*sci1011*sci1001 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn335:= krxn335d*sci2621*sci0000 -krxn335i*sci1312*sci1312 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn336:= krxn336d*sci2521*sci0000 -krxn336i*sci1312*sci1211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn337:= krxn337d*sci2522*sci0000 -krxn337i*sci1312*sci1212 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn338:= krxn338d*sci2421*sci0000 -krxn338i*sci1211*sci1211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn339:= krxn339d*sci2422*sci0000 -krxn339i*sci1212*sci1211 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn340:= krxn340d*sci2423*sci0000 -krxn340i*sci1312*sci1111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn341:= krxn341d*sci2424*sci0000 -krxn341i*sci1312*sci1111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn342:= krxn342d*sci2425*sci0000 -krxn342i*sci1212*sci1212 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn343:= krxn343d*sci2321*sci0000 -krxn343i*sci1211*sci1111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn344:= krxn344d*sci2322*sci0000 -krxn344i*sci1211*sci1112 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn345:= krxn345d*sci2323*sci0000 -krxn345i*sci1212*sci1111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn346:= krxn346d*sci2324*sci0000 -krxn346i*sci1312*sci1011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn347:= krxn347d*sci2325*sci0000 -krxn347i*sci1212*sci1112 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn348:= krxn348d*sci2221*sci0000 -krxn348i*sci1111*sci1111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn349:= krxn349d*sci2222*sci0000 -krxn349i*sci1211*sci1011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn350:= krxn350d*sci2223*sci0000 -krxn350i*sci1112*sci1111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn351:= krxn351d*sci2224*sci0000 -krxn351i*sci1212*sci1011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn352:= krxn352d*sci2225*sci0000 -krxn352i*sci1112*sci1112 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn353:= krxn353d*sci2121*sci0000 -krxn353i*sci1111*sci1011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn354:= krxn354d*sci2122*sci0000 -krxn354i*sci1112*sci1011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn355:= krxn355d*sci2021*sci0000 -krxn355i*sci1011*sci1011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn356:= krxn356d*sci2611*sci0000 -krxn356i*sci2501*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn357:= krxn357d*sci2511*sci0000 -krxn357i*sci2501*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn358:= krxn358d*sci2512*sci0000 -krxn358i*sci2401*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn359:= krxn359d*sci2513*sci0000 -krxn359i*sci2402*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn360:= krxn360d*sci2411*sci0000 -krxn360i*sci2401*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn361:= krxn361d*sci2412*sci0000 -krxn361i*sci2402*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn362:= krxn362d*sci2413*sci0000 -krxn362i*sci2301*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn363:= krxn363d*sci2414*sci0000 -krxn363i*sci2302*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn364:= krxn364d*sci2415*sci0000 -krxn364i*sci2302*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn365:= krxn365d*sci2311*sci0000 -krxn365i*sci2301*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn366:= krxn366d*sci2312*sci0000 -krxn366i*sci2302*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn367:= krxn367d*sci2313*sci0000 -krxn367i*sci2302*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn368:= krxn368d*sci2314*sci0000 -krxn368i*sci2201*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn369:= krxn369d*sci2315*sci0000 -krxn369i*sci2202*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn370:= krxn370d*sci2316*sci0000 -krxn370i*sci2201*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn371:= krxn371d*sci2211*sci0000 -krxn371i*sci2201*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn372:= krxn372d*sci2212*sci0000 -krxn372i*sci2202*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn373:= krxn373d*sci2213*sci0000 -krxn373i*sci2201*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn374:= krxn374d*sci2214*sci0000 -krxn374i*sci2101*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn375:= krxn375d*sci2215*sci0000 -krxn375i*sci2101*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn376:= krxn376d*sci2111*sci0000 -krxn376i*sci2101*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn377:= krxn377d*sci2112*sci0000 -krxn377i*sci2101*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn378:= krxn378d*sci2113*sci0000 -krxn378i*sci2001*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn379:= krxn379d*sci2011*sci0000 -krxn379i*sci2001*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn380:= krxn380d*sci2621*sci0000 -krxn380i*sci2513*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn381:= krxn381d*sci2521*sci0000 -krxn381i*sci2412*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn382:= krxn382d*sci2521*sci0000 -krxn382i*sci2513*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn383:= krxn383d*sci2522*sci0000 -krxn383i*sci2414*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn384:= krxn384d*sci2522*sci0000 -krxn384i*sci2415*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn385:= krxn385d*sci2421*sci0000 -krxn385i*sci2412*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn386:= krxn386d*sci2422*sci0000 -krxn386i*sci2313*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn387:= krxn387d*sci2422*sci0000 -krxn387i*sci2414*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn388:= krxn388d*sci2423*sci0000 -krxn388i*sci2312*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn389:= krxn389d*sci2423*sci0000 -krxn389i*sci2415*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn390:= krxn390d*sci2424*sci0000 -krxn390i*sci2314*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn391:= krxn391d*sci2424*sci0000 -krxn391i*sci2316*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn392:= krxn392d*sci2425*sci0000 -krxn392i*sci2315*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn393:= krxn393d*sci2321*sci0000 -krxn393i*sci2312*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn394:= krxn394d*sci2321*sci0000 -krxn394i*sci2313*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn395:= krxn395d*sci2322*sci0000 -krxn395i*sci2213*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn396:= krxn396d*sci2322*sci0000 -krxn396i*sci2314*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn397:= krxn397d*sci2323*sci0000 -krxn397i*sci2212*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn398:= krxn398d*sci2323*sci0000 -krxn398i*sci2315*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn399:= krxn399d*sci2324*sci0000 -krxn399i*sci2211*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn400:= krxn400d*sci2324*sci0000 -krxn400i*sci2316*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn401:= krxn401d*sci2325*sci0000 -krxn401i*sci2214*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn402:= krxn402d*sci2325*sci0000 -krxn402i*sci2215*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn403:= krxn403d*sci2221*sci0000 -krxn403i*sci2212*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn404:= krxn404d*sci2222*sci0000 -krxn404i*sci2211*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn405:= krxn405d*sci2222*sci0000 -krxn405i*sci2213*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn406:= krxn406d*sci2223*sci0000 -krxn406i*sci2112*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn407:= krxn407d*sci2223*sci0000 -krxn407i*sci2214*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn408:= krxn408d*sci2224*sci0000 -krxn408i*sci2111*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn409:= krxn409d*sci2224*sci0000 -krxn409i*sci2215*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn410:= krxn410d*sci2225*sci0000 -krxn410i*sci2113*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn411:= krxn411d*sci2121*sci0000 -krxn411i*sci2111*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn412:= krxn412d*sci2121*sci0000 -krxn412i*sci2112*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn413:= krxn413d*sci2122*sci0000 -krxn413i*sci2011*sci0111 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn414:= krxn414d*sci2122*sci0000 -krxn414i*sci2113*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn415:= krxn415d*sci2021*sci0000 -krxn415i*sci2011*sci0011 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">srrxn416:= krxn416d*sci2414 -krxn416i*sci2411 :</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">fprintf( &quot;Cu111-dd-1.xls&quot; ,&quot;%q %q\134n&quot;, &quot;Cu111&quot; , timei, T, Pg0021, Pg0201, Pg0211, Pg1011, Pg1021, Pg1211, Pg1221, Pg1401, Pg1411, Pg2202, Pg2211, Pg2214, Pg2221, Pg2224, Pg2225, Pg2402, Pg2411, Pg2414, Pg2423, Pg2425, Pg2601, Pg2611, Pg2621 , sci0000, sci0011, sci0021, sci0101, sci0111, sci0201, sci0211, sci1001, sci1011, sci1021, sci1101, sci1111, sci1112, sci1121, sci1122, sci1201, sci1211, sci1212, sci1221, sci1301, sci1311, sci1312, sci1401, sci1411, sci2001, sci2011, sci2021, sci2101, sci2111, sci2112, sci2113, sci2121, sci2122, sci2201, sci2202, sci2211, sci2212, sci2213, sci2214, sci2215, sci2221, sci2222, sci2223, sci2224, sci2225, sci2301, sci2302, sci2311, sci2312, sci2313, sci2314, sci2315, sci2316, sci2321, sci2322, sci2323, sci2324, sci2325, sci2401, sci2402, sci2411, sci2412, sci2413, sci2414, sci2415, sci2421, sci2422, sci2423, sci2424, sci2425, sci2501, sci2511, sci2512, sci2513, sci2521, sci2522, sci2601, sci2611, sci2621 , srads001, srads002, srads003, srads004, srads005, srads006, srads007, srads008, srads009, srads010, srads011, srads012, srads013, srads014, srads015, srads016, srads017, srads018, srads019, srads020, srads021, srads022, srads023, srrxn101, srrxn102, srrxn103, srrxn104, srrxn105, srrxn106, srrxn107, srrxn108, srrxn109, srrxn110, srrxn111, srrxn112, srrxn113, srrxn114, srrxn115, srrxn116, srrxn117, srrxn118, srrxn119, srrxn120, srrxn121, srrxn122, srrxn123, srrxn124, srrxn125, srrxn126, srrxn127, srrxn128, srrxn129, srrxn130, srrxn131, srrxn132, srrxn133, srrxn134, srrxn135, srrxn136, srrxn137, srrxn138, srrxn139, srrxn140, srrxn141, srrxn201, srrxn202, srrxn203, srrxn204, srrxn205, srrxn206, srrxn207, srrxn208, srrxn209, srrxn210, srrxn211, srrxn212, srrxn213, srrxn214, srrxn215, srrxn216, srrxn217, srrxn218, srrxn219, srrxn220, srrxn221, srrxn222, srrxn223, srrxn224, srrxn225, srrxn226, srrxn227, srrxn228, srrxn229, srrxn230, srrxn231, srrxn232, srrxn233, srrxn234, srrxn235, srrxn236, srrxn237, srrxn238, srrxn239, srrxn240, srrxn241, srrxn242, srrxn243, srrxn244, srrxn245, srrxn246, srrxn247, srrxn248, srrxn249, srrxn250, srrxn251, srrxn252, srrxn253, srrxn254, srrxn255, srrxn256, srrxn257, srrxn258, srrxn259, srrxn260, srrxn261, srrxn262, srrxn263, srrxn264, srrxn265, srrxn266, srrxn267, srrxn268, srrxn269, srrxn270, srrxn271, srrxn272, srrxn273, srrxn274, srrxn275, srrxn276, srrxn277, srrxn278, srrxn279, srrxn280, srrxn281, srrxn282, srrxn283, srrxn284, srrxn285, srrxn286, srrxn287, srrxn288, srrxn289, srrxn290, srrxn291, srrxn292, srrxn293, srrxn294, srrxn295, srrxn296, srrxn297, srrxn298, srrxn299, srrxn300, srrxn301, srrxn302, srrxn303, srrxn304, srrxn305, srrxn306, srrxn307, srrxn308, srrxn309, srrxn310, srrxn311, srrxn312, srrxn313, srrxn314, srrxn315, srrxn316, srrxn317, srrxn318, srrxn319, srrxn320, srrxn321, srrxn322, srrxn323, srrxn324, srrxn325, srrxn326, srrxn327, srrxn328, srrxn329, srrxn330, srrxn331, srrxn332, srrxn333, srrxn334, srrxn335, srrxn336, srrxn337, srrxn338, srrxn339, srrxn340, srrxn341, srrxn342, srrxn343, srrxn344, srrxn345, srrxn346, srrxn347, srrxn348, srrxn349, srrxn350, srrxn351, srrxn352, srrxn353, srrxn354, srrxn355, srrxn356, srrxn357, srrxn358, srrxn359, srrxn360, srrxn361, srrxn362, srrxn363, srrxn364, srrxn365, srrxn366, srrxn367, srrxn368, srrxn369, srrxn370, srrxn371, srrxn372, srrxn373, srrxn374, srrxn375, srrxn376, srrxn377, srrxn378, srrxn379, srrxn380, srrxn381, srrxn382, srrxn383, srrxn384, srrxn385, srrxn386, srrxn387, srrxn388, srrxn389, srrxn390, srrxn391, srrxn392, srrxn393, srrxn394, srrxn395, srrxn396, srrxn397, srrxn398, srrxn399, srrxn400, srrxn401, srrxn402, srrxn403, srrxn404, srrxn405, srrxn406, srrxn407, srrxn408, srrxn409, srrxn410, srrxn411, srrxn412, srrxn413, srrxn414, srrxn415, srrxn416  ): </Font></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">flush( &quot;Cu111-dd-1.xls&quot; ): </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">od: </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"> </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">close( &quot;Cu111-dd-1.xls&quot; ): </Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2JVEpU29sdXRpb25GJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSM6PUYnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUYjNistRjY2L1ElcHJvY0YnLyUlYm9sZEdGMS9GM1ElYm9sZEYnLyUrZm9udHdlaWdodEdGV0Y7Rj5GQEZCRkRGRkZIL0ZLUSYwLjBlbUYnL0ZORmVuLUkobWZlbmNlZEdGJDYkLUYjNiYtRiw2JVEteF9yb3NlbmJyb2NrRidGL0YyLyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y9RjlGOS1JJ21zcGFjZUdGJDYmLyUnaGVpZ2h0R1EmMC4wZXhGJy8lJndpZHRoR1EmMC41ZW1GJy8lJmRlcHRoR0Zpby8lKmxpbmVicmVha0dRMWZpcnN0cHJvY25ld2xpbmVGJy1GNjYtUSQuLi5GJ0Y5RjtGPkZARkJGREZGRkgvRktRLDAuMjIyMjIyMmVtRidGZm4tRmVvNiZGZ29Gam9GXXAvRmBwUTZkZWNyZWFzZWluZGVudG5ld2xpbmVGJy1GNjYvUSllbmR+cHJvY0YnRlRGVkZYRjtGPkZARkJGREZGRkhGWkZmbkZfb0Zib0Y5Rl9vRmJvRjk="></Equation></Text-field>
</Output>
</Group>
<Group labelreference="L71" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Worksheet>